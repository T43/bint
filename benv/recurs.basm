intCOMMAND_COUNTER;
stringcommand;
COMMAND_COUNTER=0;
string$reverse_return_var;
stack$reverse_res;
goto(#reverse_end);
#reverse:print("");
stacks;
print("");
pop(s);
print("");
stringbuf;
stackres;
s.pop(buf);
#_reverse_s:print("");
[goto(#_reverse_e),("end"==buf),print("")];
res.push(buf);
s.pop(buf);
goto(#_reverse_s);
#_reverse_e:print("");
push(res);
UNDEFINE(res);
UNDEFINE(buf);
UNDEFINE(s);
goto($reverse_return_var);
#reverse_end:print("");
string$indexes_return_var;
stack$indexes_res;
goto(#indexes_end);
#indexes:print("");
stringsub_s;
strings;
print("");
pop(sub_s);
pop(s);
print("");
stackres;
inti;
intpointer;
ints_len;
ints_len_old;
intsub_len;
s_len=len(s);
sub_len=len(sub_s);
s_len_old=s_len;
i=index(s,sub_s);
pointer=i;
#_indexes_s:print("");
[goto(#_indexes_e),(-1==i),print("")];
i=(i+(s_len_old-s_len));
res.push(i);
pointer=(pointer+sub_len);
s=s[pointer:s_len];
s_len=len(s);
i=index(s,sub_s);
pointer=i;
goto(#_indexes_s);
#_indexes_e:print("");
stack$reverse_res0;
push(res);
$reverse_return_var="#reverse_res0";
goto(#reverse);
#reverse_res0:pop($reverse_res);
$reverse_res0=$reverse_res;
res=$reverse_res0;
push(res);
UNDEFINE($reverse_res0);
UNDEFINE(sub_len);
UNDEFINE(s_len_old);
UNDEFINE(s_len);
UNDEFINE(pointer);
UNDEFINE(i);
UNDEFINE(res);
UNDEFINE(sub_s);
UNDEFINE(s);
goto($indexes_return_var);
#indexes_end:print("");
string$SET_COMMAND_COUNTER_return_var;
goto(#SET_COMMAND_COUNTER_end);
#SET_COMMAND_COUNTER:print("");
intcounter;
print("");
pop(counter);
print("");
inti;
i=0;
stringcommand;
RESET_SOURCE();
COMMAND_COUNTER=counter;
#_set_start:print("");
[print(""),(i<counter),goto(#_set_end)];
next_command(command);
i=(i+1);
goto(#_set_start);
#_set_end:print("");
print("");
UNDEFINE(command);
UNDEFINE(i);
UNDEFINE(counter);
goto($SET_COMMAND_COUNTER_return_var);
#SET_COMMAND_COUNTER_end:print("");
string$switch_command_return_var;
goto(#switch_command_end);
#switch_command:print("");
print("");
COMMAND_COUNTER=(COMMAND_COUNTER+1);
next_command(command);
goto($switch_command_return_var);
#switch_command_end:print("");
string$stack_len_return_var;
int$stack_len_res;
goto(#stack_len_end);
#stack_len:print("");
stacks;
print("");
pop(s);
print("");
intres;
stringbuf;
res=0;
s.pop(buf);
#_stack_len_s:print("");
[goto(#_stack_len_e),("end"==buf),print("")];
res=(res+1);
s.pop(buf);
goto(#_stack_len_s);
#_stack_len_e:print("");
push(res);
UNDEFINE(buf);
UNDEFINE(res);
UNDEFINE(s);
goto($stack_len_return_var);
#stack_len_end:print("");
string$ops_return_var;
stack$ops_res;
goto(#ops_end);
#ops:print("");
stringop;
stringcommand;
print("");
pop(op);
pop(command);
print("");
stackquotes;
stackthese_quotes;
stackop_nums;
stringbuf;
stackres;
intnum1;
intnum2;
intop_num;
boolwas_quote;
boolto_add;
was_quote=False;
to_add=True;
stack$indexes_res0;
push(command);
push(op);
$indexes_return_var="#indexes_res0";
goto(#indexes);
#indexes_res0:pop($indexes_res);
$indexes_res0=$indexes_res;
op_nums=$indexes_res0;
op_nums.pop(buf);
#_op_nums_s:print("");
[goto(#_op_nums_e),("end"==buf),print("")];
op_num=int(buf);
quotes=reg_find("\"(\\.|[^\"])*\"",command);
#_quotes_s:print("");
quotes.pop(these_quotes);
these_quotes.pop(buf);
[goto(#_quotes_e),("end"==buf),print("")];
#_these_quotes_s:print("");
[goto(#_these_quotes_e),("end"==buf),print("")];
num1=int(buf);
these_quotes.pop(buf);
num2=int(buf);
these_quotes.pop(buf);
was_quote=True;
goto(#_these_quotes_s);
#_these_quotes_e:print("");
[print(""),((op_num>num1)AND(op_num<num2)),goto(#_is_op_end)];
to_add=False;
goto(#_push_op_end);
#_is_op_end:print("");
goto(#_quotes_s);
#_quotes_e:print("");
[goto(#_push_op_end),((was_quote)AND(NOT(to_add))),print("")];
res.push(op_num);
was_quote=False;
to_add=True;
#_push_op_end:print("");
print("");
op_nums.pop(buf);
was_quote=False;
to_add=True;
goto(#_op_nums_s);
#_op_nums_e:print("");
stack$reverse_res1;
push(res);
$reverse_return_var="#reverse_res1";
goto(#reverse);
#reverse_res1:pop($reverse_res);
$reverse_res1=$reverse_res;
res=$reverse_res1;
push(res);
UNDEFINE($reverse_res1);
UNDEFINE($indexes_res0);
UNDEFINE(to_add);
UNDEFINE(was_quote);
UNDEFINE(op_num);
UNDEFINE(num2);
UNDEFINE(num1);
UNDEFINE(res);
UNDEFINE(buf);
UNDEFINE(op_nums);
UNDEFINE(these_quotes);
UNDEFINE(quotes);
UNDEFINE(op);
UNDEFINE(command);
goto($ops_return_var);
#ops_end:print("");
string$block_end_return_var;
int$block_end_res;
goto(#block_end_end);
#block_end:print("");
print("");
stringop1;
stringop2;
stringcode;
stringcommand_buf;
into_sum;
intc_sum;
intcommand_len;
stackobraces;
stackcbraces;
stringbuf;
stringspos;
intcounter;
intbuf_counter;
intpos;
counter=COMMAND_COUNTER;
command_len=len(command);
command=command[1:command_len];
code=command;
next_command(command);
counter=(counter+1);
code=(code+command[0]);
o_sum=1;
c_sum=0;
#_block_s:print("");
[goto(#_block_e),(o_sum==c_sum),print("")];
stack$ops_res0;
push(code);
push("{");
$ops_return_var="#ops_res0";
goto(#ops);
#ops_res0:pop($ops_res);
$ops_res0=$ops_res;
obraces=$ops_res0;
stack$ops_res1;
push(code);
push("}");
$ops_return_var="#ops_res1";
goto(#ops);
#ops_res1:pop($ops_res);
$ops_res1=$ops_res;
cbraces=$ops_res1;
int$stack_len_res0;
push(obraces);
$stack_len_return_var="#stack_len_res0";
goto(#stack_len);
#stack_len_res0:pop($stack_len_res);
$stack_len_res0=$stack_len_res;
o_sum=$stack_len_res0;
int$stack_len_res1;
push(cbraces);
$stack_len_return_var="#stack_len_res1";
goto(#stack_len);
#stack_len_res1:pop($stack_len_res);
$stack_len_res1=$stack_len_res;
c_sum=$stack_len_res1;
command_len=len(command);
command_buf=command[1:command_len];
code=(code+command_buf);
next_command(command);
counter=(counter+1);
command_buf=command[0];
code=(code+command_buf);
goto(#_block_s);
#_block_e:print("");
buf_counter=(COMMAND_COUNTER-1);
push(buf_counter);
$SET_COMMAND_COUNTER_return_var="#SET_COMMAND_COUNTER_res0";
goto(#SET_COMMAND_COUNTER);
#SET_COMMAND_COUNTER_res0:print("");
print("");
next_command(command);
COMMAND_COUNTER=(COMMAND_COUNTER+1);
push((counter-1));
UNDEFINE($stack_len_res1);
UNDEFINE($stack_len_res0);
UNDEFINE($ops_res1);
UNDEFINE($ops_res0);
UNDEFINE(pos);
UNDEFINE(buf_counter);
UNDEFINE(counter);
UNDEFINE(spos);
UNDEFINE(buf);
UNDEFINE(cbraces);
UNDEFINE(obraces);
UNDEFINE(command_len);
UNDEFINE(c_sum);
UNDEFINE(o_sum);
UNDEFINE(command_buf);
UNDEFINE(code);
UNDEFINE(op2);
UNDEFINE(op1);
goto($block_end_return_var);
#block_end_end:print("");
string$println_return_var;
goto(#println_end);
#println:print("");
strings;
print("");
pop(s);
print("");
string $print_arg0;
$print_arg0=s;
print($print_arg0);
UNDEFINE($print_arg0);
string $print_arg0;
$print_arg0="\n";
print($print_arg0);
UNDEFINE($print_arg0);
UNDEFINE(s);
goto($println_return_var);
#println_end:print("");
string$in_stack_return_var;
bool$in_stack_res;
goto(#in_stack_end);
#in_stack:print("");
stringel;
stacks;
print("");
pop(el);
pop(s);
print("");
stringbuf;
boolres;
res=False;
s.pop(buf);
#_in_stack_s:print("");
[goto(#_in_stack_e),("end"==buf),print("")];
[print(""),(el==buf),goto(#_no)];
res=True;
goto(#_in_stack_e);
#_no:print("");
s.pop(buf);
goto(#_in_stack_s);
#_in_stack_e:print("");
push(res);
UNDEFINE(res);
UNDEFINE(buf);
UNDEFINE(el);
UNDEFINE(s);
goto($in_stack_return_var);
#in_stack_end:print("");
string$func_end_return_var;
int$func_end_res;
goto(#func_end_end);
#func_end:print("");
intfunc_begin;
stringcommand;
print("");
pop(func_begin);
pop(command);
print("");
stackobraces;
stackcbraces;
stringobrace;
stringcbrace;
stringsymbol;
into_sum;
intc_sum;
intpos;
stringspos;
intcommand_len;
command_len=len(command);
obrace="(";
cbrace=")";
o_sum=1;
c_sum=0;
pos=(func_begin+1);
stack$ops_res2;
push(command);
push(obrace);
$ops_return_var="#ops_res2";
goto(#ops);
#ops_res2:pop($ops_res);
$ops_res2=$ops_res;
obraces=$ops_res2;
stack$ops_res3;
push(command);
push(cbrace);
$ops_return_var="#ops_res3";
goto(#ops);
#ops_res3:pop($ops_res);
$ops_res3=$ops_res;
cbraces=$ops_res3;
#_braces_s:print("");
[print(""),(pos<command_len),goto(#_braces_e)];
spos=str(pos);
bool$in_stack_res0;
push(obraces);
push(spos);
$in_stack_return_var="#in_stack_res0";
goto(#in_stack);
#in_stack_res0:pop($in_stack_res);
$in_stack_res0=$in_stack_res;
[print(""),$in_stack_res0,goto(#_o_plus_end)];
o_sum=(o_sum+1);
#_o_plus_end:print("");
bool$in_stack_res1;
push(cbraces);
push(spos);
$in_stack_return_var="#in_stack_res1";
goto(#in_stack);
#in_stack_res1:pop($in_stack_res);
$in_stack_res1=$in_stack_res;
[print(""),$in_stack_res1,goto(#_c_plus_end)];
c_sum=(c_sum+1);
#_c_plus_end:print("");
[goto(#_braces_e),(o_sum==c_sum),print("")];
pos=(pos+1);
goto(#_braces_s);
#_braces_e:print("");
push(pos);
UNDEFINE($in_stack_res1);
UNDEFINE($in_stack_res0);
UNDEFINE($ops_res3);
UNDEFINE($ops_res2);
UNDEFINE(command_len);
UNDEFINE(spos);
UNDEFINE(pos);
UNDEFINE(c_sum);
UNDEFINE(o_sum);
UNDEFINE(symbol);
UNDEFINE(cbrace);
UNDEFINE(obrace);
UNDEFINE(cbraces);
UNDEFINE(obraces);
UNDEFINE(func_begin);
UNDEFINE(command);
goto($func_end_return_var);
#func_end_end:print("");
boolfirst_file;
intbr_closed;
intbr_opened;
string$init_return_var;
goto(#init_end);
#init:print("");
print("");
stringroot_source;
first_file=True;
br_closed=0;
br_opened=0;
get_root_source(root_source);
SET_SOURCE(root_source);
SET_DEST("benv/recurs_program.b");
UNDEFINE(root_source);
goto($init_return_var);
#init_end:print("");
string$finish_return_var;
goto(#finish_end);
#finish:print("");
print("");
UNSET_SOURCE();
UNSET_DEST();
goto($finish_return_var);
#finish_end:print("");
string$is_var_def_return_var;
bool$is_var_def_res;
goto(#is_var_def_end);
#is_var_def:print("");
stringcommand;
print("");
pop(command);
print("");
stacks;
stringbuf;
s=reg_find("^(?:(int|float|bool|stack|string)[^\(]*)",command);
s.pop(buf);
push((NOT("end"==buf)));
UNDEFINE(buf);
UNDEFINE(s);
UNDEFINE(command);
goto($is_var_def_return_var);
#is_var_def_end:print("");
string$is_func_definition_return_var;
bool$is_func_definition_res;
goto(#is_func_definition_end);
#is_func_definition:print("");
stringcommand;
print("");
pop(command);
print("");
stacks;
stringbuf;
stringr1;
stringr2;
stringr3;
stringr;
r1="(?:(int|float|bool|string|stack|void)[[:alnum:]|_]";
r2="*?\((?:((int|float|bool|string|stack))[[:alnum:]|_]+\,){0,})";
r3="(int|float|bool|string|stack)[[:alnum:]|_]+\){";
r=((r1+r2)+r3);
s=reg_find(r,command);
s.pop(buf);
[print(""),(NOT("end"==buf)),goto(#_cond0_end)];
push(True);
UNDEFINE(r);
UNDEFINE(r3);
UNDEFINE(r2);
UNDEFINE(r1);
UNDEFINE(buf);
UNDEFINE(s);
UNDEFINE(command);
goto($is_func_definition_return_var);
#_cond0_end:print("");
print("");
s=reg_find("(?:(int|float|bool|string|stack|void)[[:alnum:]|_]*?\(\){)",command);
s.pop(buf);
push((NOT("end"==buf)));
UNDEFINE(s);
UNDEFINE(buf);
UNDEFINE(r1);
UNDEFINE(r2);
UNDEFINE(r3);
UNDEFINE(r);
UNDEFINE(command);
goto($is_func_definition_return_var);
#is_func_definition_end:print("");
string$T_return_var;
string$T_res;
goto(#T_end);
#T:print("");
stringcommand;
print("");
pop(command);
print("");
stacks;
stringbuf;
s=reg_find("(?:(^int))",command);
s.pop(buf);
[print(""),(NOT("end"==buf)),goto(#_cond1_end)];
push("int");
UNDEFINE(buf);
UNDEFINE(s);
UNDEFINE(command);
goto($T_return_var);
#_cond1_end:print("");
print("");
s=reg_find("(?:(^float))",command);
s.pop(buf);
[print(""),(NOT("end"==buf)),goto(#_cond2_end)];
push("float");
UNDEFINE(s);
UNDEFINE(buf);
UNDEFINE(command);
goto($T_return_var);
#_cond2_end:print("");
print("");
s=reg_find("(?:(^bool))",command);
s.pop(buf);
[print(""),(NOT("end"==buf)),goto(#_cond3_end)];
push("bool");
UNDEFINE(buf);
UNDEFINE(s);
UNDEFINE(command);
goto($T_return_var);
#_cond3_end:print("");
print("");
s=reg_find("(?:(^stack))",command);
s.pop(buf);
[print(""),(NOT("end"==buf)),goto(#_cond4_end)];
push("stack");
UNDEFINE(s);
UNDEFINE(buf);
UNDEFINE(command);
goto($T_return_var);
#_cond4_end:print("");
print("");
s=reg_find("(?:(^string))",command);
s.pop(buf);
[print(""),(NOT("end"==buf)),goto(#_cond5_end)];
push("string");
UNDEFINE(buf);
UNDEFINE(s);
UNDEFINE(command);
goto($T_return_var);
#_cond5_end:print("");
print("");
s=reg_find("(?:(^void))",command);
s.pop(buf);
[print(""),(NOT("end"==buf)),goto(#_cond6_end)];
push("void");
UNDEFINE(s);
UNDEFINE(buf);
UNDEFINE(command);
goto($T_return_var);
#_cond6_end:print("");
print("");
string $print_arg0;
$print_arg0=command;
print($print_arg0);
UNDEFINE($print_arg0);
string $print_arg0;
$print_arg0="\n";
print($print_arg0);
UNDEFINE($print_arg0);
string $print_arg0;
$print_arg0="T: ERROR\n";
print($print_arg0);
UNDEFINE($print_arg0);
push("ERROR");
UNDEFINE(buf);
UNDEFINE(s);
UNDEFINE(command);
goto($T_return_var);
#T_end:print("");
string$func_name_return_var;
string$func_name_res;
goto(#func_name_end);
#func_name:print("");
stringcommand;
print("");
pop(command);
print("");
stringt;
intpos;
intepos;
intcommand_len;
string$T_res0;
push(command);
$T_return_var="#T_res0";
goto(#T);
#T_res0:pop($T_res);
$T_res0=$T_res;
t=$T_res0;
[print(""),("ERROR"==command),goto(#_cond7_end)];
push("ERROR");
UNDEFINE($T_res0);
UNDEFINE(command_len);
UNDEFINE(epos);
UNDEFINE(pos);
UNDEFINE(t);
UNDEFINE(command);
goto($func_name_return_var);
#_cond7_end:print("");
print("");
pos=len(t);
command_len=len(command);
command=command[pos:command_len];
epos=index(command,"(");
[print(""),(-1==epos),goto(#_cond8_end)];
push("ERROR");
UNDEFINE(t);
UNDEFINE(pos);
UNDEFINE(epos);
UNDEFINE(command_len);
UNDEFINE($T_res0);
UNDEFINE(command);
goto($func_name_return_var);
#_cond8_end:print("");
print("");
command=command[0:epos];
push(command);
UNDEFINE($T_res0);
UNDEFINE(command_len);
UNDEFINE(epos);
UNDEFINE(pos);
UNDEFINE(t);
UNDEFINE(command);
goto($func_name_return_var);
#func_name_end:print("");
string$args_to_accept_return_var;
stack$args_to_accept_res;
goto(#args_to_accept_end);
#args_to_accept:print("");
stringcommand;
print("");
pop(command);
print("");
intpos1;
intpos2;
strings_to_parse;
stringt;
stackres;
stacknull;
stackel;
intL;
stringarg_name;
stringarg_type;
pos1=index(command,"(");
pos1=(pos1+1);
pos2=index(command,")");
[print(""),(pos1==pos2),goto(#_cond9_end)];
push(res);
UNDEFINE(arg_type);
UNDEFINE(arg_name);
UNDEFINE(L);
UNDEFINE(el);
UNDEFINE(null);
UNDEFINE(res);
UNDEFINE(t);
UNDEFINE(s_to_parse);
UNDEFINE(pos2);
UNDEFINE(pos1);
UNDEFINE(command);
goto($args_to_accept_return_var);
#_cond9_end:print("");
print("");
[print(""),((-1==pos1)OR(-1==pos2)),goto(#_cond10_end)];
string $print_arg0;
$print_arg0=command;
print($print_arg0);
UNDEFINE($print_arg0);
string $print_arg0;
$print_arg0="\n";
print($print_arg0);
UNDEFINE($print_arg0);
string $print_arg0;
$print_arg0="recurs: args_to_accept: ERROR\n";
print($print_arg0);
UNDEFINE($print_arg0);
#_cond10_end:print("");
print("");
s_to_parse=command[pos1:pos2];
#parse_s:print("");
el=null;
string$T_res1;
push(s_to_parse);
$T_return_var="#T_res1";
goto(#T);
#T_res1:pop($T_res);
$T_res1=$T_res;
t=$T_res1;
pos1=len(t);
L=len(s_to_parse);
s_to_parse=s_to_parse[pos1:L];
pos1=index(s_to_parse,",");
[print(""),(-1==pos1),goto(#_cond11_end)];
pos1=len(s_to_parse);
arg_name=s_to_parse[0:pos1];
el.push(arg_name);
el.push(t);
res.push(el);
stackres_el;
stacknew_res;
stringbuf;
#rev:print("");
res.pop(res_el);
res_el.pop(buf);
[print(""),("end"==buf),goto(#_cond12_end)];
push(new_res);
UNDEFINE(buf);
UNDEFINE(new_res);
UNDEFINE(res_el);
UNDEFINE($T_res1);
UNDEFINE(pos1);
UNDEFINE(pos2);
UNDEFINE(s_to_parse);
UNDEFINE(t);
UNDEFINE(res);
UNDEFINE(null);
UNDEFINE(el);
UNDEFINE(L);
UNDEFINE(arg_name);
UNDEFINE(arg_type);
UNDEFINE(command);
goto($args_to_accept_return_var);
#_cond12_end:print("");
print("");
res_el.push(buf);
new_res.push(res_el);
goto(#rev);
#_cond11_end:print("");
print("");
arg_name=s_to_parse[0:pos1];
pos1=(pos1+1);
L=len(s_to_parse);
s_to_parse=s_to_parse[pos1:L];
el.push(arg_name);
el.push(t);
res.push(el);
goto(#parse_s);
#args_to_accept_end:print("");
string$args_to_pass_return_var;
stack$args_to_pass_res;
goto(#args_to_pass_end);
#args_to_pass:print("");
stringfcall;
print("");
pop(fcall);
print("");
intpos1;
intpos2;
intcommand_len;
stringbuf;
stackres;
stringcommand;
command=fcall;
pos1=index(command,"(");
int$func_end_res0;
push(command);
push(0);
$func_end_return_var="#func_end_res0";
goto(#func_end);
#func_end_res0:pop($func_end_res);
$func_end_res0=$func_end_res;
pos2=$func_end_res0;
command=command[pos1:pos2];
pos1=1;
command_len=len(command);
[print(""),(pos1==(command_len-1)),goto(#_cond13_end)];
push(res);
UNDEFINE($func_end_res0);
UNDEFINE(command);
UNDEFINE(res);
UNDEFINE(buf);
UNDEFINE(command_len);
UNDEFINE(pos2);
UNDEFINE(pos1);
UNDEFINE(fcall);
goto($args_to_pass_return_var);
#_cond13_end:print("");
print("");
#next_arg:print("");
pos2=index(command,",");
[print(""),(-1==pos2),goto(#_cond14_end)];
command_len=len(command);
pos2=(command_len-1);
buf=command[pos1:pos2];
res.push(buf);
push(res);
UNDEFINE(pos1);
UNDEFINE(pos2);
UNDEFINE(command_len);
UNDEFINE(buf);
UNDEFINE(res);
UNDEFINE(command);
UNDEFINE($func_end_res0);
UNDEFINE(fcall);
goto($args_to_pass_return_var);
#_cond14_end:print("");
print("");
buf=command[pos1:pos2];
res.push(buf);
pos2=(pos2+1);
command_len=len(command);
command=command[pos2:command_len];
pos1=0;
goto(#next_arg);
#args_to_pass_end:print("");
string$func_call_return_var;
int$func_call_res;
goto(#func_call_end);
#func_call:print("");
stringcommand;
stringfname;
print("");
pop(command);
pop(fname);
print("");
stringreg;
stacks;
stackthis_s;
stringbuf;
intpos;
reg=(("(?:"+fname)+"\(.*\))");
s=reg_find(reg,command);
s.pop(this_s);
this_s.pop(buf);
[print(""),("end"==buf),goto(#_cond15_end)];
pos=-1;
goto(#_cond_exit0);
#_cond15_end:print("");
pos=int(buf);
print("");
#_cond_exit0:print("");
print("");
push(pos);
UNDEFINE(pos);
UNDEFINE(buf);
UNDEFINE(this_s);
UNDEFINE(s);
UNDEFINE(reg);
UNDEFINE(command);
UNDEFINE(fname);
goto($func_call_return_var);
#func_call_end:print("");
string$switch_files_return_var;
goto(#switch_files_end);
#switch_files:print("");
print("");
$finish_return_var="#finish_res0";
goto(#finish);
#finish_res0:print("");
print("");
[print(""),(first_file),goto(#first_end)];
SET_SOURCE("benv/recurs_program.b");
SET_DEST("benv/recurs_program2.b");
first_file=False;
goto(#switch_files_e);
#first_end:print("");
SET_SOURCE("benv/recurs_program2.b");
SET_DEST("benv/recurs_program.b");
first_file=True;
#switch_files_e:print("");
print("");
goto($switch_files_return_var);
#switch_files_end:print("");
string$clear_files_return_var;
goto(#clear_files_end);
#clear_files:print("");
print("");
$finish_return_var="#finish_res1";
goto(#finish);
#finish_res1:print("");
print("");
[goto(#first),(first_file),print("")];
SET_SOURCE("benv/recurs_program2.b");
SET_DEST("benv/recurs_program.b");
$switch_files_return_var="#switch_files_res0";
goto(#switch_files);
#switch_files_res0:print("");
print("");
$switch_command_return_var="#switch_command_res0";
goto(#switch_command);
#switch_command_res0:print("");
print("");
#clear_files_s:print("");
[goto(#clear_files_e),("end"==command),print("")];
send_command(command);
$switch_command_return_var="#switch_command_res1";
goto(#switch_command);
#switch_command_res1:print("");
print("");
goto(#clear_files_s);
#first:print("");
print("");
#clear_files_e:print("");
DEL_DEST("benv/recurs_program2.b");
goto($clear_files_return_var);
#clear_files_end:print("");
string$check_br_return_var;
goto(#check_br_end);
#check_br:print("");
stringcommand;
print("");
pop(command);
print("");
stringsymbol;
stacks;
stringbuf;
symbol="{";
stack$ops_res4;
push(command);
push(symbol);
$ops_return_var="#ops_res4";
goto(#ops);
#ops_res4:pop($ops_res);
$ops_res4=$ops_res;
s=$ops_res4;
s.pop(buf);
[print(""),(NOT("end"==buf)),goto(#_cond16_end)];
br_opened=(br_opened+1);
#_cond16_end:print("");
print("");
symbol="}";
stack$ops_res5;
push(command);
push(symbol);
$ops_return_var="#ops_res5";
goto(#ops);
#ops_res5:pop($ops_res);
$ops_res5=$ops_res;
s=$ops_res5;
s.pop(buf);
[print(""),(NOT("end"==buf)),goto(#_cond17_end)];
br_closed=(br_closed+1);
#_cond17_end:print("");
print("");
UNDEFINE($ops_res5);
UNDEFINE($ops_res4);
UNDEFINE(buf);
UNDEFINE(s);
UNDEFINE(symbol);
UNDEFINE(command);
goto($check_br_return_var);
#check_br_end:print("");
string$reset_br_return_var;
goto(#reset_br_end);
#reset_br:print("");
print("");
br_opened=0;
br_closed=0;
goto($reset_br_return_var);
#reset_br_end:print("");
string$main_return_var;
goto(#main_end);
#main:print("");
print("");
$init_return_var="#init_res0";
goto(#init);
#init_res0:print("");
print("");
stringname;
stackaccepted_args;
stackpassed_args;
stackraccepted_args;
stackargs_to_undefine;
stacknull;
stackbuf_stack;
stringt;
stackarg;
stringarg_name;
stringarg_type;
intcounter;
stringbuf;
intold_COMMAND_COUNTER;
intbuf_COMMAND_COUNTER;
intpos;
intpos1;
intpos2;
intcall_counter;
intold_call_counter;
stringnew_command;
boolwas_recurs;
boolfirst_recurs_call;
intcall_num;
stringscall_num;
stringres;
intcommand_len;
stringcommand_buf;
call_counter=0;
was_recurs=False;
first_recurs_call=True;
send_command("string $ret");
$switch_command_return_var="#switch_command_res2";
goto(#switch_command);
#switch_command_res2:print("");
print("");
#main_s:print("");
print("");
[print(""),(NOT("end"==command)),goto(#_cond18_end)];
bool$is_func_definition_res0;
push(command);
$is_func_definition_return_var="#is_func_definition_res0";
goto(#is_func_definition);
#is_func_definition_res0:pop($is_func_definition_res);
$is_func_definition_res0=$is_func_definition_res;
[print(""),($is_func_definition_res0),goto(#_cond19_end)];
string$T_res2;
push(command);
$T_return_var="#T_res2";
goto(#T);
#T_res2:pop($T_res);
$T_res2=$T_res;
t=$T_res2;
[print(""),("ERROR"==t),goto(#_cond20_end)];
string $print_arg0;
$print_arg0="recurs ERROR\n";
print($print_arg0);
UNDEFINE($print_arg0);
#_cond20_end:print("");
print("");
string$func_name_res0;
push(command);
$func_name_return_var="#func_name_res0";
goto(#func_name);
#func_name_res0:pop($func_name_res);
$func_name_res0=$func_name_res;
name=$func_name_res0;
[print(""),("ERROR"==name),goto(#_cond21_end)];
string $print_arg0;
$print_arg0="recurs ERROR\n";
print($print_arg0);
UNDEFINE($print_arg0);
#_cond21_end:print("");
print("");
call_num=0;
stack$args_to_accept_res0;
push(command);
$args_to_accept_return_var="#args_to_accept_res0";
goto(#args_to_accept);
#args_to_accept_res0:pop($args_to_accept_res);
$args_to_accept_res0=$args_to_accept_res;
raccepted_args=$args_to_accept_res0;
int$block_end_res0;
$block_end_return_var="#block_end_res0";
goto(#block_end);
#block_end_res0:pop($block_end_res);
$block_end_res0=$block_end_res;
counter=$block_end_res0;
old_COMMAND_COUNTER=COMMAND_COUNTER;
#is_recurs:print("");
print("");
[print(""),(COMMAND_COUNTER<counter),goto(#_cond22_end)];
$switch_command_return_var="#switch_command_res3";
goto(#switch_command);
#switch_command_res3:print("");
print("");
int$func_call_res0;
push(name);
push(command);
$func_call_return_var="#func_call_res0";
goto(#func_call);
#func_call_res0:pop($func_call_res);
$func_call_res0=$func_call_res;
pos=$func_call_res0;
[print(""),(NOT(-1==pos)),goto(#_cond23_end)];
was_recurs=True;
old_call_counter=call_counter;
call_counter=COMMAND_COUNTER;
push(old_call_counter);
$SET_COMMAND_COUNTER_return_var="#SET_COMMAND_COUNTER_res1";
goto(#SET_COMMAND_COUNTER);
#SET_COMMAND_COUNTER_res1:print("");
print("");
$switch_command_return_var="#switch_command_res4";
goto(#switch_command);
#switch_command_res4:print("");
print("");
#block_begin:print("");
print("");
[print(""),(COMMAND_COUNTER<old_COMMAND_COUNTER),goto(#_cond24_end)];
send_command(command);
$switch_command_return_var="#switch_command_res5";
goto(#switch_command);
#switch_command_res5:print("");
print("");
goto(#block_begin);
#_cond24_end:print("");
print("");
[print(""),(first_recurs_call),goto(#_cond25_end)];
first_recurs_call=False;
new_command=("stack"+("$"+(name+"_stack")));
send_command(new_command);
new_command=(("goto(#"+name)+"_end)");
send_command(new_command);
new_command=(("#"+name)+":");
new_command=(new_command+"print(\"\")");
send_command(new_command);
accepted_args=raccepted_args;
accepted_args.pop(arg);
arg.pop(arg_type);
arg.pop(arg_name);
#append_args:print("");
[print(""),(NOT("end"==arg_name)),goto(#_cond26_end)];
args_to_undefine.push(arg_name);
accepted_args.pop(arg);
arg.pop(arg_type);
arg.pop(arg_name);
goto(#append_args);
#_cond26_end:print("");
print("");
$switch_command_return_var="#switch_command_res6";
goto(#switch_command);
#switch_command_res6:print("");
print("");
#_cond25_end:print("");
print("");
accepted_args=raccepted_args;
accepted_args.pop(arg);
arg.pop(arg_type);
arg.pop(arg_name);
#ax:print("");
[print(""),(NOT("end"==arg_name)),goto(#_cond27_end)];
new_command=(arg_type+arg_name);
send_command(new_command);
new_command=(("pop("+arg_name)+")");
send_command(new_command);
accepted_args.pop(arg);
arg.pop(arg_type);
arg.pop(arg_name);
goto(#ax);
#_cond27_end:print("");
print("");
boolis_ret;
is_ret=False;
#before_recurs:print("");
print("");
[print(""),(COMMAND_COUNTER<call_counter),goto(#_cond28_end)];
command_len=len(command);
[print(""),(command_len>6),goto(#_cond29_end)];
command_buf=command[0:6];
[print(""),("return"==command_buf),goto(#_cond30_end)];
stringret_arg;
ret_arg=command[6:command_len];
new_command=(("push("+ret_arg)+")");
send_command(new_command);
buf_stack=args_to_undefine;
args_to_undefine.pop(arg_name);
#un:print("");
[print(""),(NOT("end"==arg_name)),goto(#_cond31_end)];
new_command=(("UNDEFINE("+arg_name)+")");
send_command(new_command);
args_to_undefine.pop(arg_name);
goto(#un);
#_cond31_end:print("");
print("");
args_to_undefine=buf_stack;
new_command=(("$"+name)+"_stack.pop($ret)");
send_command(new_command);
new_command="goto($ret)";
send_command(new_command);
is_ret=True;
#_cond30_end:print("");
print("");
#_cond29_end:print("");
print("");
push(command);
$check_br_return_var="#check_br_res0";
goto(#check_br);
#check_br_res0:print("");
print("");
bool$is_var_def_res0;
push(command);
$is_var_def_return_var="#is_var_def_res0";
goto(#is_var_def);
#is_var_def_res0:pop($is_var_def_res);
$is_var_def_res0=$is_var_def_res;
[print(""),(($is_var_def_res0)AND(br_closed==br_opened)),goto(#_cond32_end)];
string$T_res3;
push(command);
$T_return_var="#T_res3";
goto(#T);
#T_res3:pop($T_res);
$T_res3=$T_res;
arg_type=$T_res3;
inttype_len;
type_len=len(arg_type);
command_len=len(command);
arg_name=command[type_len:command_len];
args_to_undefine.push(arg_name);
#_cond32_end:print("");
print("");
[print(""),(NOT(is_ret)),goto(#_cond33_end)];
send_command(command);
#_cond33_end:print("");
print("");
is_ret=False;
$switch_command_return_var="#switch_command_res7";
goto(#switch_command);
#switch_command_res7:print("");
print("");
goto(#before_recurs);
#_cond28_end:print("");
print("");
scall_num=str(call_num);
res=((("#"+name)+"_res")+scall_num);
new_command=((("$"+(name+"_stack.push("))+res)+")");
send_command(new_command);
call_num=(call_num+1);
int$func_call_res1;
push(name);
push(command);
$func_call_return_var="#func_call_res1";
goto(#func_call);
#func_call_res1:pop($func_call_res);
$func_call_res1=$func_call_res;
pos1=$func_call_res1;
int$func_end_res1;
push(command);
push(pos1);
$func_end_return_var="#func_end_res1";
goto(#func_end);
#func_end_res1:pop($func_end_res);
$func_end_res1=$func_end_res;
pos2=$func_end_res1;
new_command=command[pos1:pos2];
stack$args_to_pass_res0;
push(new_command);
$args_to_pass_return_var="#args_to_pass_res0";
goto(#args_to_pass);
#args_to_pass_res0:pop($args_to_pass_res);
$args_to_pass_res0=$args_to_pass_res;
passed_args=$args_to_pass_res0;
passed_args.pop(arg_name);
#internal_passed:print("");
print("");
[print(""),(NOT("end"==arg_name)),goto(#_cond34_end)];
res=(("push("+arg_name)+")");
send_command(res);
passed_args.pop(arg_name);
goto(#internal_passed);
#_cond34_end:print("");
print("");
new_command=(("goto(#"+name)+")");
send_command(new_command);
res=((("#"+name)+"_res")+scall_num);
res=(res+":print(\"\")");
send_command(res);
[print(""),(NOT("void"==t)),goto(#_cond35_end)];
new_command=((((t+"$")+name)+"_res")+scall_num);
send_command(new_command);
new_command=(("pop("+((("$"+name)+"_res")+scall_num))+")");
send_command(new_command);
new_command=command[0:pos1];
new_command=((((new_command+"$")+name)+"_res")+scall_num);
command_len=len(command);
command=command[pos2:command_len];
new_command=(new_command+command);
command_len=len(new_command);
[print(""),(command_len>6),goto(#_cond36_end)];
command=new_command[0:6];
[print(""),("return"==command),goto(#_cond37_end)];
stringret_arg;
ret_arg=new_command[6:command_len];
command=(("push("+ret_arg)+")");
send_command(command);
buf_stack=args_to_undefine;
args_to_undefine.pop(arg_name);
#un2:print("");
[print(""),(NOT("end"==arg_name)),goto(#_cond38_end)];
new_command=(("UNDEFINE("+arg_name)+")");
send_command(new_command);
args_to_undefine.pop(arg_name);
goto(#un2);
#_cond38_end:print("");
print("");
args_to_undefine=buf_stack;
command=(("$"+name)+"_stack.pop($ret)");
send_command(command);
command="goto($ret)";
send_command(command);
goto(#_cond_exit2);
#_cond37_end:print("");
send_command(new_command);
print("");
#_cond_exit2:print("");
print("");
goto(#_cond_exit1);
#_cond36_end:print("");
send_command(new_command);
print("");
#_cond_exit1:print("");
print("");
#_cond35_end:print("");
print("");
#_cond23_end:print("");
print("");
goto(#is_recurs);
#_cond22_end:print("");
print("");
[print(""),(was_recurs),goto(#_cond39_end)];
was_recurs=False;
first_recurs_call=True;
push(call_counter);
$SET_COMMAND_COUNTER_return_var="#SET_COMMAND_COUNTER_res2";
goto(#SET_COMMAND_COUNTER);
#SET_COMMAND_COUNTER_res2:print("");
print("");
$switch_command_return_var="#switch_command_res8";
goto(#switch_command);
#switch_command_res8:print("");
print("");
boolis_ret;
is_ret=False;
#rest:print("");
print("");
[print(""),(COMMAND_COUNTER<counter),goto(#_cond40_end)];
command_len=len(command);
[print(""),(command_len>6),goto(#_cond41_end)];
command_buf=command[0:6];
[print(""),("return"==command_buf),goto(#_cond42_end)];
stringret_arg;
ret_arg=command[6:command_len];
new_command=(("push("+ret_arg)+")");
send_command(new_command);
buf_stack=args_to_undefine;
args_to_undefine.pop(arg_name);
#un4:print("");
[print(""),(NOT("end"==arg_name)),goto(#_cond43_end)];
new_command=(("UNDEFINE("+arg_name)+")");
send_command(new_command);
args_to_undefine.pop(arg_name);
goto(#un4);
#_cond43_end:print("");
print("");
args_to_undefine=buf_stack;
new_command=(("$"+name)+"_stack.pop($ret)");
send_command(new_command);
new_command="goto($ret)";
send_command(new_command);
is_ret=True;
#_cond42_end:print("");
print("");
#_cond41_end:print("");
print("");
push(command);
$check_br_return_var="#check_br_res1";
goto(#check_br);
#check_br_res1:print("");
print("");
bool$is_var_def_res1;
push(command);
$is_var_def_return_var="#is_var_def_res1";
goto(#is_var_def);
#is_var_def_res1:pop($is_var_def_res);
$is_var_def_res1=$is_var_def_res;
[print(""),(($is_var_def_res1)AND(br_closed==br_opened)),goto(#_cond44_end)];
string$T_res4;
push(command);
$T_return_var="#T_res4";
goto(#T);
#T_res4:pop($T_res);
$T_res4=$T_res;
arg_type=$T_res4;
inttype_len;
type_len=len(arg_type);
command_len=len(command);
arg_name=command[type_len:command_len];
args_to_undefine.push(arg_name);
#_cond44_end:print("");
print("");
[print(""),(NOT(is_ret)),goto(#_cond45_end)];
send_command(command);
#_cond45_end:print("");
print("");
is_ret=False;
$switch_command_return_var="#switch_command_res9";
goto(#switch_command);
#switch_command_res9:print("");
print("");
goto(#rest);
#_cond40_end:print("");
print("");
[print(""),("void"==t),goto(#_cond46_end)];
args_to_undefine.pop(arg_name);
#un3:print("");
[print(""),(NOT("end"==arg_name)),goto(#_cond47_end)];
new_command=(("UNDEFINE("+arg_name)+")");
send_command(new_command);
args_to_undefine.pop(arg_name);
goto(#un3);
#_cond47_end:print("");
print("");
new_command=(("$"+name)+"_stack.pop($ret)");
send_command(new_command);
new_command="goto($ret)";
send_command(new_command);
#_cond46_end:print("");
print("");
new_command=("#"+(name+"_end:"));
new_command=(new_command+"print(\"\")");
send_command(new_command);
$switch_command_return_var="#switch_command_res10";
goto(#switch_command);
#switch_command_res10:print("");
print("");
#external_call:print("");
print("");
[print(""),(NOT("end"==command)),goto(#_cond48_end)];
int$func_call_res2;
push(name);
push(command);
$func_call_return_var="#func_call_res2";
goto(#func_call);
#func_call_res2:pop($func_call_res);
$func_call_res2=$func_call_res;
pos=$func_call_res2;
[print(""),(NOT(-1==pos)),goto(#_cond49_end)];
pos1=pos;
int$func_end_res2;
push(command);
push(pos1);
$func_end_return_var="#func_end_res2";
goto(#func_end);
#func_end_res2:pop($func_end_res);
$func_end_res2=$func_end_res;
pos2=$func_end_res2;
command=command[pos1:pos2];
stack$args_to_pass_res1;
push(command);
$args_to_pass_return_var="#args_to_pass_res1";
goto(#args_to_pass);
#args_to_pass_res1:pop($args_to_pass_res);
$args_to_pass_res1=$args_to_pass_res;
passed_args=$args_to_pass_res1;
passed_args.pop(arg_name);
#passed:print("");
print("");
[print(""),(NOT("end"==arg_name)),goto(#_cond50_end)];
res=(("push("+arg_name)+")");
send_command(res);
passed_args.pop(arg_name);
goto(#passed);
#_cond50_end:print("");
print("");
scall_num=str(call_num);
res=((((((("$"+name)+"_stack.push(")+"#")+name)+"_res")+scall_num)+")");
send_command(res);
res=(("goto(#"+name)+")");
send_command(res);
res=((("#"+name)+"_res")+scall_num);
res=(res+":print(\"\")");
send_command(res);
call_num=(call_num+1);
#_cond49_end:print("");
print("");
[print(""),(-1==pos),goto(#_cond51_end)];
send_command(command);
#_cond51_end:print("");
print("");
$switch_command_return_var="#switch_command_res11";
goto(#switch_command);
#switch_command_res11:print("");
print("");
goto(#external_call);
#_cond48_end:print("");
print("");
$switch_files_return_var="#switch_files_res1";
goto(#switch_files);
#switch_files_res1:print("");
print("");
call_counter=0;
push(0);
$SET_COMMAND_COUNTER_return_var="#SET_COMMAND_COUNTER_res3";
goto(#SET_COMMAND_COUNTER);
#SET_COMMAND_COUNTER_res3:print("");
print("");
#_cond39_end:print("");
print("");
#_cond19_end:print("");
print("");
$reset_br_return_var="#reset_br_res0";
goto(#reset_br);
#reset_br_res0:print("");
print("");
args_to_undefine=null;
$switch_command_return_var="#switch_command_res12";
goto(#switch_command);
#switch_command_res12:print("");
print("");
goto(#main_s);
#_cond18_end:print("");
print("");
push(0);
$SET_COMMAND_COUNTER_return_var="#SET_COMMAND_COUNTER_res4";
goto(#SET_COMMAND_COUNTER);
#SET_COMMAND_COUNTER_res4:print("");
print("");
$switch_command_return_var="#switch_command_res13";
goto(#switch_command);
#switch_command_res13:print("");
print("");
#final_rest:print("");
print("");
[print(""),(NOT("end"==command)),goto(#_cond52_end)];
send_command(command);
$switch_command_return_var="#switch_command_res14";
goto(#switch_command);
#switch_command_res14:print("");
print("");
goto(#final_rest);
#_cond52_end:print("");
print("");
new_command="#_exit:print(\"\")";
send_command(new_command);
$clear_files_return_var="#clear_files_res0";
goto(#clear_files);
#clear_files_res0:print("");
print("");
UNDEFINE($args_to_pass_res1);
UNDEFINE($func_end_res2);
UNDEFINE($func_call_res2);
UNDEFINE(type_len);
UNDEFINE($T_res4);
UNDEFINE($is_var_def_res1);
UNDEFINE(ret_arg);
UNDEFINE(is_ret);
UNDEFINE(ret_arg);
UNDEFINE($args_to_pass_res0);
UNDEFINE($func_end_res1);
UNDEFINE($func_call_res1);
UNDEFINE(type_len);
UNDEFINE($T_res3);
UNDEFINE($is_var_def_res0);
UNDEFINE(ret_arg);
UNDEFINE(is_ret);
UNDEFINE($func_call_res0);
UNDEFINE($block_end_res0);
UNDEFINE($args_to_accept_res0);
UNDEFINE($func_name_res0);
UNDEFINE($T_res2);
UNDEFINE($is_func_definition_res0);
UNDEFINE(command_buf);
UNDEFINE(command_len);
UNDEFINE(res);
UNDEFINE(scall_num);
UNDEFINE(call_num);
UNDEFINE(first_recurs_call);
UNDEFINE(was_recurs);
UNDEFINE(new_command);
UNDEFINE(old_call_counter);
UNDEFINE(call_counter);
UNDEFINE(pos2);
UNDEFINE(pos1);
UNDEFINE(pos);
UNDEFINE(buf_COMMAND_COUNTER);
UNDEFINE(old_COMMAND_COUNTER);
UNDEFINE(buf);
UNDEFINE(counter);
UNDEFINE(arg_type);
UNDEFINE(arg_name);
UNDEFINE(arg);
UNDEFINE(t);
UNDEFINE(buf_stack);
UNDEFINE(null);
UNDEFINE(args_to_undefine);
UNDEFINE(raccepted_args);
UNDEFINE(passed_args);
UNDEFINE(accepted_args);
UNDEFINE(name);
goto($main_return_var);
#main_end:print("");
$main_return_var="#main_res0";
goto(#main);
#main_res0:print("");
print("");
