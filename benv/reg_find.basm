string$ret;
intCOMMAND_COUNTER;
stringcommand;
COMMAND_COUNTER=0;
string$reverse_return_var;
stack$reverse_res;
goto(#reverse_end);
#reverse:print("");
stacks;
print("");
pop(s);
print("");
stringbuf;
stackres;
s.pop(buf);
#_reverse_s:print("");
[goto(#_reverse_e),("end"==buf),print("")];
res.push(buf);
s.pop(buf);
goto(#_reverse_s);
#_reverse_e:print("");
push(res);
UNDEFINE(res);
UNDEFINE(buf);
UNDEFINE(s);
goto($reverse_return_var);
#reverse_end:print("");
string$indexes_return_var;
stack$indexes_res;
goto(#indexes_end);
#indexes:print("");
stringsub_s;
strings;
print("");
pop(sub_s);
pop(s);
print("");
stackres;
inti;
intpointer;
ints_len;
ints_len_old;
intsub_len;
s_len=len(s);
sub_len=len(sub_s);
s_len_old=s_len;
i=index(s,sub_s);
pointer=i;
#_indexes_s:print("");
[goto(#_indexes_e),(-1==i),print("")];
i=(i+(s_len_old-s_len));
res.push(i);
pointer=(pointer+sub_len);
s=s[pointer:s_len];
s_len=len(s);
i=index(s,sub_s);
pointer=i;
goto(#_indexes_s);
#_indexes_e:print("");
stack$reverse_res0;
push(res);
$reverse_return_var="#reverse_res0";
goto(#reverse);
#reverse_res0:pop($reverse_res);
$reverse_res0=$reverse_res;
res=$reverse_res0;
push(res);
UNDEFINE($reverse_res0);
UNDEFINE(sub_len);
UNDEFINE(s_len_old);
UNDEFINE(s_len);
UNDEFINE(pointer);
UNDEFINE(i);
UNDEFINE(res);
UNDEFINE(sub_s);
UNDEFINE(s);
goto($indexes_return_var);
#indexes_end:print("");
string$SET_COMMAND_COUNTER_return_var;
goto(#SET_COMMAND_COUNTER_end);
#SET_COMMAND_COUNTER:print("");
intcounter;
print("");
pop(counter);
print("");
inti;
i=0;
stringcommand;
RESET_SOURCE();
COMMAND_COUNTER=counter;
#_set_start:print("");
[print(""),(i<counter),goto(#_set_end)];
next_command(command);
i=(i+1);
goto(#_set_start);
#_set_end:print("");
print("");
UNDEFINE(command);
UNDEFINE(i);
UNDEFINE(counter);
goto($SET_COMMAND_COUNTER_return_var);
#SET_COMMAND_COUNTER_end:print("");
string$get_command_return_var;
string$get_command_res;
goto(#get_command_end);
#get_command:print("");
intcounter;
print("");
pop(counter);
print("");
inti;
stringbuf;
stringcommand;
i=0;
RESET_SOURCE();
#_get_command_s:print("");
[print(""),(i<counter),goto(#_get_command_e)];
next_command(command);
i=(i+1);
goto(#_get_command_s);
#_get_command_e:print("");
push(COMMAND_COUNTER);
$SET_COMMAND_COUNTER_return_var="#SET_COMMAND_COUNTER_res0";
goto(#SET_COMMAND_COUNTER);
#SET_COMMAND_COUNTER_res0:print("");
print("");
push(command);
UNDEFINE(command);
UNDEFINE(buf);
UNDEFINE(i);
UNDEFINE(counter);
goto($get_command_return_var);
#get_command_end:print("");
string$switch_command_return_var;
goto(#switch_command_end);
#switch_command:print("");
print("");
COMMAND_COUNTER=(COMMAND_COUNTER+1);
next_command(command);
goto($switch_command_return_var);
#switch_command_end:print("");
string$stack_len_return_var;
int$stack_len_res;
goto(#stack_len_end);
#stack_len:print("");
stacks;
print("");
pop(s);
print("");
intres;
stringbuf;
res=0;
s.pop(buf);
#_stack_len_s:print("");
[goto(#_stack_len_e),("end"==buf),print("")];
res=(res+1);
s.pop(buf);
goto(#_stack_len_s);
#_stack_len_e:print("");
push(res);
UNDEFINE(buf);
UNDEFINE(res);
UNDEFINE(s);
goto($stack_len_return_var);
#stack_len_end:print("");
string$ops_return_var;
stack$ops_res;
goto(#ops_end);
#ops:print("");
stringop;
stringcommand;
print("");
pop(op);
pop(command);
print("");
stackquotes;
stackthese_quotes;
stackop_nums;
stringbuf;
stackres;
intnum1;
intnum2;
intop_num;
boolwas_quote;
boolto_add;
was_quote=False;
to_add=True;
stack$indexes_res0;
push(command);
push(op);
$indexes_return_var="#indexes_res0";
goto(#indexes);
#indexes_res0:pop($indexes_res);
$indexes_res0=$indexes_res;
op_nums=$indexes_res0;
op_nums.pop(buf);
#_op_nums_s:print("");
[goto(#_op_nums_e),("end"==buf),print("")];
op_num=int(buf);
quotes=reg_find("\"(\\.|[^\"])*\"",command);
#_quotes_s:print("");
quotes.pop(these_quotes);
these_quotes.pop(buf);
[goto(#_quotes_e),("end"==buf),print("")];
#_these_quotes_s:print("");
[goto(#_these_quotes_e),("end"==buf),print("")];
num1=int(buf);
these_quotes.pop(buf);
num2=int(buf);
these_quotes.pop(buf);
was_quote=True;
goto(#_these_quotes_s);
#_these_quotes_e:print("");
[print(""),((op_num>num1)AND(op_num<num2)),goto(#_is_op_end)];
to_add=False;
goto(#_push_op_end);
#_is_op_end:print("");
goto(#_quotes_s);
#_quotes_e:print("");
[goto(#_push_op_end),((was_quote)AND(NOT(to_add))),print("")];
res.push(op_num);
was_quote=False;
to_add=True;
#_push_op_end:print("");
print("");
op_nums.pop(buf);
was_quote=False;
to_add=True;
goto(#_op_nums_s);
#_op_nums_e:print("");
stack$reverse_res1;
push(res);
$reverse_return_var="#reverse_res1";
goto(#reverse);
#reverse_res1:pop($reverse_res);
$reverse_res1=$reverse_res;
res=$reverse_res1;
push(res);
UNDEFINE($reverse_res1);
UNDEFINE($indexes_res0);
UNDEFINE(to_add);
UNDEFINE(was_quote);
UNDEFINE(op_num);
UNDEFINE(num2);
UNDEFINE(num1);
UNDEFINE(res);
UNDEFINE(buf);
UNDEFINE(op_nums);
UNDEFINE(these_quotes);
UNDEFINE(quotes);
UNDEFINE(op);
UNDEFINE(command);
goto($ops_return_var);
#ops_end:print("");
string$block_end_return_var;
int$block_end_res;
goto(#block_end_end);
#block_end:print("");
print("");
stringop1;
stringop2;
stringcode;
stringcommand_buf;
into_sum;
intc_sum;
intcommand_len;
stackobraces;
stackcbraces;
stringbuf;
stringspos;
intcounter;
intbuf_counter;
intpos;
counter=COMMAND_COUNTER;
command_len=len(command);
command=command[1:command_len];
code=command;
next_command(command);
counter=(counter+1);
code=(code+command[0]);
o_sum=1;
c_sum=0;
#_block_s:print("");
[goto(#_block_e),(o_sum==c_sum),print("")];
stack$ops_res0;
push(code);
push("{");
$ops_return_var="#ops_res0";
goto(#ops);
#ops_res0:pop($ops_res);
$ops_res0=$ops_res;
obraces=$ops_res0;
stack$ops_res1;
push(code);
push("}");
$ops_return_var="#ops_res1";
goto(#ops);
#ops_res1:pop($ops_res);
$ops_res1=$ops_res;
cbraces=$ops_res1;
int$stack_len_res0;
push(obraces);
$stack_len_return_var="#stack_len_res0";
goto(#stack_len);
#stack_len_res0:pop($stack_len_res);
$stack_len_res0=$stack_len_res;
o_sum=$stack_len_res0;
int$stack_len_res1;
push(cbraces);
$stack_len_return_var="#stack_len_res1";
goto(#stack_len);
#stack_len_res1:pop($stack_len_res);
$stack_len_res1=$stack_len_res;
c_sum=$stack_len_res1;
command_len=len(command);
command_buf=command[1:command_len];
code=(code+command_buf);
next_command(command);
counter=(counter+1);
command_buf=command[0];
code=(code+command_buf);
goto(#_block_s);
#_block_e:print("");
buf_counter=(COMMAND_COUNTER-1);
push(buf_counter);
$SET_COMMAND_COUNTER_return_var="#SET_COMMAND_COUNTER_res1";
goto(#SET_COMMAND_COUNTER);
#SET_COMMAND_COUNTER_res1:print("");
print("");
next_command(command);
COMMAND_COUNTER=(COMMAND_COUNTER+1);
push((counter-1));
UNDEFINE($stack_len_res1);
UNDEFINE($stack_len_res0);
UNDEFINE($ops_res1);
UNDEFINE($ops_res0);
UNDEFINE(pos);
UNDEFINE(buf_counter);
UNDEFINE(counter);
UNDEFINE(spos);
UNDEFINE(buf);
UNDEFINE(cbraces);
UNDEFINE(obraces);
UNDEFINE(command_len);
UNDEFINE(c_sum);
UNDEFINE(o_sum);
UNDEFINE(command_buf);
UNDEFINE(code);
UNDEFINE(op2);
UNDEFINE(op1);
goto($block_end_return_var);
#block_end_end:print("");
string$println_return_var;
goto(#println_end);
#println:print("");
strings;
print("");
pop(s);
print("");
string $print_arg0;
$print_arg0=s;
print($print_arg0);
UNDEFINE($print_arg0);
string $print_arg0;
$print_arg0="\n";
print($print_arg0);
UNDEFINE($print_arg0);
UNDEFINE(s);
goto($println_return_var);
#println_end:print("");
string$in_stack_return_var;
bool$in_stack_res;
goto(#in_stack_end);
#in_stack:print("");
stringel;
stacks;
print("");
pop(el);
pop(s);
print("");
stringbuf;
boolres;
res=False;
s.pop(buf);
#_in_stack_s:print("");
[goto(#_in_stack_e),("end"==buf),print("")];
[print(""),(el==buf),goto(#_no)];
res=True;
goto(#_in_stack_e);
#_no:print("");
s.pop(buf);
goto(#_in_stack_s);
#_in_stack_e:print("");
push(res);
UNDEFINE(res);
UNDEFINE(buf);
UNDEFINE(el);
UNDEFINE(s);
goto($in_stack_return_var);
#in_stack_end:print("");
string$func_end_return_var;
int$func_end_res;
goto(#func_end_end);
#func_end:print("");
intfunc_begin;
stringcommand;
print("");
pop(func_begin);
pop(command);
print("");
stackobraces;
stackcbraces;
stringobrace;
stringcbrace;
stringsymbol;
into_sum;
intc_sum;
intpos;
stringspos;
intcommand_len;
command_len=len(command);
obrace="(";
cbrace=")";
o_sum=1;
c_sum=0;
pos=(func_begin+1);
stack$ops_res2;
push(command);
push(obrace);
$ops_return_var="#ops_res2";
goto(#ops);
#ops_res2:pop($ops_res);
$ops_res2=$ops_res;
obraces=$ops_res2;
stack$ops_res3;
push(command);
push(cbrace);
$ops_return_var="#ops_res3";
goto(#ops);
#ops_res3:pop($ops_res);
$ops_res3=$ops_res;
cbraces=$ops_res3;
#_braces_s:print("");
[print(""),(pos<command_len),goto(#_braces_e)];
spos=str(pos);
bool$in_stack_res0;
push(obraces);
push(spos);
$in_stack_return_var="#in_stack_res0";
goto(#in_stack);
#in_stack_res0:pop($in_stack_res);
$in_stack_res0=$in_stack_res;
[print(""),$in_stack_res0,goto(#_o_plus_end)];
o_sum=(o_sum+1);
#_o_plus_end:print("");
bool$in_stack_res1;
push(cbraces);
push(spos);
$in_stack_return_var="#in_stack_res1";
goto(#in_stack);
#in_stack_res1:pop($in_stack_res);
$in_stack_res1=$in_stack_res;
[print(""),$in_stack_res1,goto(#_c_plus_end)];
c_sum=(c_sum+1);
#_c_plus_end:print("");
[goto(#_braces_e),(o_sum==c_sum),print("")];
pos=(pos+1);
goto(#_braces_s);
#_braces_e:print("");
push(pos);
UNDEFINE($in_stack_res1);
UNDEFINE($in_stack_res0);
UNDEFINE($ops_res3);
UNDEFINE($ops_res2);
UNDEFINE(command_len);
UNDEFINE(spos);
UNDEFINE(pos);
UNDEFINE(c_sum);
UNDEFINE(o_sum);
UNDEFINE(symbol);
UNDEFINE(cbrace);
UNDEFINE(obrace);
UNDEFINE(cbraces);
UNDEFINE(obraces);
UNDEFINE(func_begin);
UNDEFINE(command);
goto($func_end_return_var);
#func_end_end:print("");
stringroot_source;
stringcommand;
boole;
string$init_return_var;
goto(#init_end);
#init:print("");
print("");
e=exists("benv/import_program.b");
[print(""),(e),goto(#_cond0_end)];
root_source="benv/import_program.b";
goto(#_cond_exit0);
#_cond0_end:print("");
root_source="benv/trace_program.b";
print("");
#_cond_exit0:print("");
print("");
SET_SOURCE(root_source);
SET_DEST("benv/reg_find_program.b");
goto($init_return_var);
#init_end:print("");
string$finish_return_var;
goto(#finish_end);
#finish:print("");
print("");
UNSET_SOURCE();
UNSET_DEST();
goto($finish_return_var);
#finish_end:print("");
string$copy_return_var;
goto(#copy_end);
#copy:print("");
stringdest;
stringsource;
print("");
pop(dest);
pop(source);
print("");
SET_SOURCE(source);
SET_DEST(dest);
stringcommand;
next_command(command);
[print(""),(True),goto(#_cond1_end)];
print("");
print("");
#for0:print("");
[print(""),(NOT("end"==command)),goto(#_cond2_end)];
send_command(command);
next_command(command);
print("");
goto(#for0);
#_cond2_end:print("");
#for0_end:print("");
#_cond1_end:print("");
print("");
UNSET_SOURCE();
UNSET_DEST();
UNDEFINE(command);
UNDEFINE(dest);
UNDEFINE(source);
goto($copy_return_var);
#copy_end:print("");
string$reg_find_poses_return_var;
stack$reg_find_poses_res;
goto(#reg_find_poses_end);
#reg_find_poses:print("");
stringcommand;
print("");
pop(command);
print("");
stacks;
stackel;
stackres;
stacknull;
intpos;
intepos;
stringfind;
boolis_let;
boolis_dig;
stringsymbol;
intbuf_pos;
find="reg_find(";
stack$ops_res4;
push(command);
push(find);
$ops_return_var="#ops_res4";
goto(#ops);
#ops_res4:pop($ops_res);
$ops_res4=$ops_res;
s=$ops_res4;
stringbuf;
s.pop(buf);
[print(""),(True),goto(#_cond3_end)];
print("");
print("");
#for1:print("");
[print(""),(NOT("end"==buf)),goto(#_cond4_end)];
pos=int(buf);
[print(""),(NOT(0==pos)),goto(#_cond5_end)];
buf_pos=(pos-1);
symbol=command[buf_pos];
is_let=is_letter(symbol);
is_dig=is_digit(symbol);
[print(""),(NOT(((is_let)OR(is_dig))OR("_"==symbol))),goto(#_cond6_end)];
int$func_end_res0;
push(command);
push((pos+8));
$func_end_return_var="#func_end_res0";
goto(#func_end);
#func_end_res0:pop($func_end_res);
$func_end_res0=$func_end_res;
epos=$func_end_res0;
el.push(epos);
el.push(pos);
res.push(el);
el=null;
#_cond6_end:print("");
print("");
goto(#_cond_exit1);
#_cond5_end:print("");
int$func_end_res1;
push(command);
push((pos+8));
$func_end_return_var="#func_end_res1";
goto(#func_end);
#func_end_res1:pop($func_end_res);
$func_end_res1=$func_end_res;
epos=$func_end_res1;
print("");
el.push(epos);
el.push(pos);
res.push(el);
el=null;
#_cond_exit1:print("");
print("");
s.pop(buf);
print("");
goto(#for1);
#_cond4_end:print("");
#for1_end:print("");
#_cond3_end:print("");
print("");
push(res);
UNDEFINE($func_end_res1);
UNDEFINE($func_end_res0);
UNDEFINE(buf);
UNDEFINE($ops_res4);
UNDEFINE(buf_pos);
UNDEFINE(symbol);
UNDEFINE(is_dig);
UNDEFINE(is_let);
UNDEFINE(find);
UNDEFINE(epos);
UNDEFINE(pos);
UNDEFINE(null);
UNDEFINE(res);
UNDEFINE(el);
UNDEFINE(s);
UNDEFINE(command);
goto($reg_find_poses_return_var);
#reg_find_poses_end:print("");
string$modify_command_return_var;
string$modify_command_res;
goto(#modify_command_end);
#modify_command:print("");
intepos;
intbpos;
stringsub_command;
stringcommand;
print("");
pop(epos);
pop(bpos);
pop(sub_command);
pop(command);
print("");
stringnew_command;
stringbuf;
intcommand_len;
new_command=command[0:bpos];
new_command=(new_command+sub_command);
command_len=len(command);
buf=command[epos:command_len];
new_command=(new_command+buf);
push(new_command);
UNDEFINE(command_len);
UNDEFINE(buf);
UNDEFINE(new_command);
UNDEFINE(epos);
UNDEFINE(bpos);
UNDEFINE(sub_command);
UNDEFINE(command);
goto($modify_command_return_var);
#modify_command_end:print("");
string$modify_return_var;
goto(#modify_end);
#modify:print("");
print("");
stacks;
stackel;
intbpos;
intepos;
stringbuf;
intnumber;
stringsnumber;
stringsub_command;
next_command(command);
[print(""),(True),goto(#_cond7_end)];
print("");
print("");
#for2:print("");
[print(""),(NOT("end"==command)),goto(#_cond8_end)];
number=0;
stack$reg_find_poses_res0;
push(command);
$reg_find_poses_return_var="#reg_find_poses_res0";
goto(#reg_find_poses);
#reg_find_poses_res0:pop($reg_find_poses_res);
$reg_find_poses_res0=$reg_find_poses_res;
s=$reg_find_poses_res0;
s.pop(el);
el.pop(buf);
[print(""),(True),goto(#_cond9_end)];
print("");
print("");
#for4:print("");
[print(""),(NOT("end"==buf)),goto(#_cond10_end)];
stack$reg_find_poses_res1;
push(command);
$reg_find_poses_return_var="#reg_find_poses_res1";
goto(#reg_find_poses);
#reg_find_poses_res1:pop($reg_find_poses_res);
$reg_find_poses_res1=$reg_find_poses_res;
s=$reg_find_poses_res1;
s.pop(el);
el.pop(buf);
bpos=int(buf);
el.pop(buf);
epos=int(buf);
epos=(epos+1);
snumber=str(number);
buf=("stack $stack_var"+snumber);
send_command(buf);
buf=command[bpos:epos];
buf=((("$stack_var"+snumber)+"=")+buf);
send_command(buf);
sub_command=("$stack_var"+snumber);
string$modify_command_res0;
push(command);
push(sub_command);
push(bpos);
push(epos);
$modify_command_return_var="#modify_command_res0";
goto(#modify_command);
#modify_command_res0:pop($modify_command_res);
$modify_command_res0=$modify_command_res;
command=$modify_command_res0;
number=(number+1);
s.pop(el);
el.pop(buf);
print("");
goto(#for4);
#_cond10_end:print("");
#for4_end:print("");
#_cond9_end:print("");
print("");
send_command(command);
[print(""),(True),goto(#_cond11_end)];
inti;
i=0;
#for5:print("");
[print(""),(i<number),goto(#_cond12_end)];
stringb;
snumber=str(i);
b=(("UNDEFINE($stack_var"+snumber)+")");
send_command(b);
i=(i+1);
goto(#for5);
UNDEFINE(b);
#_cond12_end:print("");
#for5_end:print("");
UNDEFINE(i);
#_cond11_end:print("");
print("");
next_command(command);
print("");
goto(#for2);
#_cond8_end:print("");
#for2_end:print("");
#_cond7_end:print("");
print("");
UNDEFINE($modify_command_res0);
UNDEFINE($reg_find_poses_res1);
UNDEFINE($reg_find_poses_res0);
UNDEFINE(sub_command);
UNDEFINE(snumber);
UNDEFINE(number);
UNDEFINE(buf);
UNDEFINE(epos);
UNDEFINE(bpos);
UNDEFINE(el);
UNDEFINE(s);
goto($modify_return_var);
#modify_end:print("");
string$main_return_var;
goto(#main_end);
#main:print("");
print("");
$init_return_var="#init_res0";
goto(#init);
#init_res0:print("");
print("");
$modify_return_var="#modify_res0";
goto(#modify);
#modify_res0:print("");
print("");
$finish_return_var="#finish_res0";
goto(#finish);
#finish_res0:print("");
print("");
[print(""),("benv/import_program.b"==root_source),goto(#_cond13_end)];
push("benv/reg_find_program.b");
push("benv/import_program.b");
$copy_return_var="#copy_res0";
goto(#copy);
#copy_res0:print("");
print("");
goto(#_cond_exit2);
#_cond13_end:print("");
push("benv/reg_find_program.b");
push("benv/trace_program.b");
$copy_return_var="#copy_res1";
goto(#copy);
#copy_res1:print("");
print("");
print("");
#_cond_exit2:print("");
print("");
DEL_DEST("benv/reg_find_program.b");
stringt;
stringt2;
strings;
s=str(0);
t=(("benv/trace/trace_program"+s)+".b");
e=exists(t);
[print(""),(True),goto(#_cond14_end)];
intnumber;
number=1;
#for3:print("");
[print(""),(e),goto(#_cond15_end)];
t=(("benv/trace/trace_program"+s)+".b");
SET_SOURCE(t);
t=(("benv/trace/reg_find_program"+s)+".b");
SET_DEST(t);
$modify_return_var="#modify_res1";
goto(#modify);
#modify_res1:print("");
print("");
$finish_return_var="#finish_res1";
goto(#finish);
#finish_res1:print("");
print("");
t=(("benv/trace/reg_find_program"+s)+".b");
t2=(("benv/trace/trace_program"+s)+".b");
push(t);
push(t2);
$copy_return_var="#copy_res2";
goto(#copy);
#copy_res2:print("");
print("");
t=(("benv/trace/reg_find_program"+s)+".b");
DEL_DEST(t);
s=str(number);
t=(("benv/trace/trace_program"+s)+".b");
e=exists(t);
number=(number+1);
goto(#for3);
#_cond15_end:print("");
#for3_end:print("");
UNDEFINE(number);
#_cond14_end:print("");
print("");
UNDEFINE(s);
UNDEFINE(t2);
UNDEFINE(t);
goto($main_return_var);
#main_end:print("");
$main_return_var="#main_res0";
goto(#main);
#main_res0:print("");
print("");
