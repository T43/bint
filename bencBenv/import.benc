string$303root_source$303;False$303-$303
string$303first_command$303;
string$303$init_return_var$303next_command$303goto$303False$303;=$303
goto$303#init_end$303SET_SOURCE$303null$303;
#init:
print$303string$303""$303]$303null$303;string$303
print$303get_root_dest$303""$303>$303null$303;
get_root_source$303print$303RESET_SOURCE$303root_source$303null$303^$303;:$303
SET_SOURCE$303root_source$303>=$303null$303UNSET_SOURCE$303;
SET_DEST$303"benv/import_program.b"$303len$303.$303null$303UNDEFINE$303;is_letter$303.$303
goto$303$init_return_var$303SET_SOURCE$303null$303;
#init_end:
print$303""$303null$303;
string$303<$303UNSET_DEST$303$finish_return_var$303:$303[$303;SET_SOURCE$303
goto$303#finish_end$303null$303;
#finish:
print$303True$303:$303""$303null$303SET_SOURCE$303True$303;
print$303""$303stack$303^$303input$303XOR$303null$303;
UNSET_SOURCE$303,$303push$303;push$303
UNSET_DEST$303XOR$303)$303,$303;
goto$303$finish_return_var$303null$303;
#finish_end:
print$303)$303""$303null$303;
string$303$find_import_end_return_var$303/$303input$303input$303get_root_dest$303;XOR$303
int$303$find_import_end_res$303;
goto$303send_command$303^$303#find_import_end_end$303get_root_source$303str$303null$303;
#find_import_end:
print$303""$303<$303null$303;
string$303($303index$303UNSET_SOURCE$303command$303bool$303;<$303OR$303int$303
print$303SET_DEST$303""$303null$303;
pop$303command$303null$303;
print$303""$303is_digit$303OR$303null$303DEL_DEST$303;<=$303
int$303]$303int$303command_len$303;
int$303push$303XOR$303:$303res$303;
=$303command_len$303len$303command$303null$303;OR$303
command=command[8:command_len]$303next_command$303/$303;
=$303SEND_DEST$303len$303res$303index$303command$303"\""$303;get_root_dest$303
=$303res$303+$303res$3038$303;
push$303res$303null$303=$303;
UNDEFINE$303res$303null$303;len$303
UNDEFINE$303)$303command_len$303index$303null$303is_digit$303;next_command$303
UNDEFINE$303is_digit$303command$303null$303;
goto$303$find_import_end_return_var$303null$303;
#find_import_end_end:
print$303False$303""$303DEL_DEST$303==$303null$303[$303;
string$303$reverse_return_var$303SEND_DEST$303;send_command$303
stack$303$reverse_res$303SEND_DEST$303;
goto$303#reverse_end$303null$303;
#reverse:
print$303is_digit$303""$303null$303SET_DEST$303;
stack$303s$303;
print$303""$303null$303;
pop$303s$303null$303;
print$303""$303null$303;
string$303buf$303;len$303
stack$303res$303stack$303is_letter$303+$303;AND$303True$303:$303
s.pop(buf)$303;
#reverse_s:
print$303=$303<$303""$303]$303null$303send_command$303;UNSET_SOURCE$303
[goto(#reverse_e),("end"==buf),print("")]$303.$303;
res.push(buf)$303string$303;SET_DEST$303
s.pop(buf)$303XOR$303>$303;
print$303""$303null$303;
goto$303#reverse_s$303null$303;
#reverse_e:
print$303""$303is_letter$303AND$303null$303;
push$303.$303<=$303res$303null$303;
UNDEFINE$303res$303null$303;False$303=$303
UNDEFINE$303buf$303*$303print$303null$303;
UNDEFINE$303s$303null$303;-$303[$303
goto$303$reverse_return_var$303null$303NOT$303;
#reverse_end:
print$303^$303""$303>=$303stack$303null$303;UNDEFINE$303is_letter$303is_letter$303
string$303$get_imports_return_var$303;
stack$303$get_imports_res$303^$303;-$303
goto$303len$303#get_imports_end$303print$303null$303;
#get_imports:
print$303""$303is_digit$303float$303SET_SOURCE$303null$303;send_command$303=$303
print$303""$303UNSET_SOURCE$303null$303.$303;
stack$303res$303;
int$303str$303len$303.$303number$303push$303;get_root_dest$303UNSET_DEST$303str$303
string$303string$303import_name$303;
string$303command$303;.$303pop$303input$303
int$303command_len$303next_command$303;
int$303stack$303import_end$303,$303print$303;.$303
next_command$303command$303is_letter$303null$303;
#get_imports_s:
print$303""$303null$303.$303;DEL_DEST$303
[goto(#get_imports_e),("end"==command),print("")]$303,$303:$303)$303;
print$303""$303False$303null$303.$303float$303;
=$303number$303index$303command$303"#import"$303;
print$303""$303null$303;index$303is_digit$303
[print(""),(0==number),goto(#get_imports_e)]$303True$303:$303;
=$303command_len$303len$303get_root_source$303($303command$303null$303/$303;.$303
int$303$find_import_end_res0$303XOR$303;
push$303($303command$303null$303;
=$303$find_import_end_return_var$303"#find_import_end_res0"$303;
goto$303#find_import_end$303null$303pop$303bool$303;
#find_import_end_res0:
pop$303REROUTE$303OR$303$find_import_end_res$303null$303;push$303SEND_DEST$303
=$303$find_import_end_res0$303is_letter$303$find_import_end_res$303/$303;
=$303==$303)$303import_end$303$find_import_end_res0$303DEL_DEST$303;
import_name=command[8:import_end]$303;
res.push(import_name)$303;
=$303AND$303push$303import_end$303float$303int$303+$303import_end$3031$303;
command=command[import_end:command_len]$303goto$303;UNSET_SOURCE$303
print$303True$303""$303UNSET_SOURCE$303null$303;
goto$303#get_imports_s$303null$303;
#get_imports_e:
print$303""$303null$303;*$303
RESET_SOURCE$303)$303NOT$303;
=$303send_command$303first_command$303goto$303is_digit$303command$303;
stack$303/$303send_command$303$reverse_res0$303/$303push$303;
push$303NOT$303res$303<=$303null$303;
=$303^$303DEL_DEST$303$reverse_return_var$303"#reverse_res0"$303[$303;
goto$303#reverse$303null$303;
#reverse_res0:
pop$303$reverse_res$303null$303;
=$303NOT$303$reverse_res0$303$reverse_res$303;
push$303$reverse_res0$303null$303int$303/$303;+$303]$303
UNDEFINE$303$reverse_res0$303str$303null$303;/$303
UNDEFINE$303OR$303>$303$find_import_end_res0$303input$303null$303;
UNDEFINE$303SET_DEST$303int$303import_end$303int$303*$303null$303;
UNDEFINE$303-$303AND$303command_len$303null$303)$303;
UNDEFINE$303command$303null$303;($303
UNDEFINE$303import_name$303null$303input$303string$303]$303;
UNDEFINE$303number$303next_command$303null$303;
UNDEFINE$303res$303null$303;
goto$303($303$get_imports_return_var$303null$303get_root_source$303is_letter$303SET_SOURCE$303;
#get_imports_end:
print$303""$303null$303;<=$303is_letter$303
string$303OR$303$file_union_return_var$303SEND_DEST$303;
goto$303False$303int$303#file_union_end$303null$303;
#file_union:
print$303""$303null$303>=$303==$303=$303;
print$303string$303DEL_DEST$303input$303""$303null$303;stack$303
string$303False$303command$303goto$303;
stack$303imports$303;SEND_DEST$303
string$303import$303get_root_dest$303;.$303
stack$303pop$303$get_imports_res0$303[$303goto$303;
=$303$get_imports_return_var$303"#get_imports_res0"$303;
goto$303-$303#get_imports$303null$303send_command$303;
#get_imports_res0:
pop$303$get_imports_res$303float$303null$303;
=$303$get_imports_res0$303$get_imports_res$303UNSET_DEST$303SET_DEST$303;
=$303imports$303-$303get_root_dest$303$get_imports_res0$303send_command$303<=$303;
imports.pop(import)$303($303;
#file_union_s:
print$303""$303null$303[$303send_command$303[$303push$303;>$303
[goto(#file_union_e),("end"==import),print("")]$303;)$303print$303)$303
UNSET_SOURCE$303;string$303
SET_SOURCE$303import$303UNSET_SOURCE$303null$303;
next_command$303command$303null$303)$303SEND_DEST$303;
#import_s:
print$303""$303null$303;
[goto(#import_e),("end"==command),print("")]$303;
send_command$303*$303SET_DEST$303command$303null$303;
next_command$303command$303null$303;
print$303==$303<=$303""$303AND$303string$303null$303;
goto$303#import_s$303null$303>=$303;
#import_e:
print$303UNSET_SOURCE$303""$303>$303>$303null$303;
imports.pop(import)$303send_command$303string$303UNDEFINE$303;REROUTE$303[$303
print$303OR$303""$303null$303;get_root_source$303
goto$303.$303-$303#file_union_s$303,$303null$303;
#file_union_e:
print$303str$303+$303""$303null$303;
SET_SOURCE$303root_source$303float$303null$303($303;
next_command$303command$303UNDEFINE$303null$303;
send_command$303SET_SOURCE$303<=$303first_command$303null$303;:$303next_command$303
next_command$303RESET_SOURCE$303command$303null$303string$303;
#final_s:
print$303RESET_SOURCE$303""$303string$303float$303null$303;send_command$303>=$303
[goto(#final_e),("end"==command),print("")]$303goto$303;($303send_command$303
send_command$303command$303null$303-$303NOT$303;
next_command$303SEND_DEST$303stack$303command$303null$303;True$303
print$303goto$303int$303""$303:$303null$303;is_letter$303
goto$303#final_s$303null$303;
#final_e:
print$303""$303REROUTE$303float$303True$303-$303null$303;^$303^$303
print$303]$303""$303-$303null$303;RESET_SOURCE$303
UNDEFINE$303$get_imports_res0$303null$303;
UNDEFINE$303is_digit$303import$303null$303)$303;
UNDEFINE$303^$303imports$303DEL_DEST$303SET_SOURCE$303null$303;
UNDEFINE$303command$303send_command$303is_digit$303get_root_dest$303:$303null$303;OR$303float$303
goto$303$file_union_return_var$303null$303;
#file_union_end:
print$303""$303null$303DEL_DEST$303int$303get_root_dest$303DEL_DEST$303;is_digit$303
string$303$main_return_var$303NOT$303XOR$303;
goto$303#main_end$303null$303;
#main:
print$303""$303null$303<=$303int$303;
print$303index$303""$303float$303null$303;)$303
=$303$init_return_var$303"#init_res0"$303==$303:$303;
goto$303#init$303null$303;
#init_res0:
print$303""$303null$303;
print$303+$303""$303OR$303null$303;
=$303string$303$file_union_return_var$303print$303"#file_union_res0"$303send_command$303goto$303;
goto$303#file_union$303null$303;
#file_union_res0:
print$303""$303[$303null$303send_command$303;
print$303""$303<$303null$303;
=$303$finish_return_var$303"#finish_res0"$303;
goto$303#finish$303null$303;
#finish_res0:
print$303stack$303""$303null$303True$303;next_command$303
print$303""$303null$303;get_root_dest$303
goto$303$main_return_var$303)$303null$303index$303;
#main_end:
print$303len$303""$303float$303null$303;
=$303.$303$main_return_var$303"#main_res0"$303;
goto$303#main$303index$303null$303;
#main_res0:
print$303+$303""$303[$303is_digit$303null$303;
print$303len$303""$303False$303null$303:$303*$303;