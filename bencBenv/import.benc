,$303string$303root_source;
string$303len$303first_command;-$303
string$303$init_return_var;<=$303
goto$303==$303#init_end$303null;
#init:
print$303""$303DEL_DEST$303null;]$303
print$303""$303)$303null;
get_root_source$303root_source$303null;index$303
SET_SOURCE$303send_command$303get_root_source$303root_source$303null;next_command$303
SET_DEST$303"bendBenv/import_program.b"$303SEND_DEST$303AND$303null;
goto$303:$303$init_return_var$303null;
#init_end:
print$303""$303SET_SOURCE$303null;
string$303$finish_return_var;
goto$303#finish_end$303DEL_DEST$303<=$303)$303null;
#finish:
print$303[$303goto$303""$303null;:$303
print$303]$303""$303null;:$303>=$303
UNSET_SOURCE;]$303
UNSET_DEST;
goto$303$finish_return_var$303get_root_source$303null;
#finish_end:
print$303""$303next_command$303null;,$303get_root_source$303
string$303)$303$find_import_end_return_var;input$303
int$303pop$303SEND_DEST$303:$303$find_import_end_res;next_command$303float$303
goto$303#find_import_end_end$303null;
#find_import_end:
print$303""$303<=$303SET_DEST$303index$303get_root_dest$303null;
string$303.$303command;
print$303""$303null;
pop$303print$303command$303>$303null;
print$303""$303null;
int$303NOT$303bool$303command_len;
int$303RESET_SOURCE$303res;
=$303command_len$303len$303command$303null;next_command$303OR$303
command=command[8:command_len];
=$303res$303XOR$303index$303command$303"\"";float$303
=$303res$303+$303res$3038;
push$303res$303send_command$303==$303UNSET_SOURCE$303XOR$303null;]$303
UNDEFINE$303goto$303res$303-$303null;
UNDEFINE$303command_len$303UNSET_DEST$303null;
UNDEFINE$303command$303input$303null;DEL_DEST$303UNDEFINE$303input$303*$303
goto$303$find_import_end_return_var$303null;
#find_import_end_end:
print$303""$303<$303XOR$303NOT$303bool$303null;
string$303RESET_SOURCE$303send_command$303goto$303$reverse_return_var;
stack$303)$303:$303is_digit$303AND$303$reverse_res;get_root_dest$303index$303bool$303UNSET_DEST$303
goto$303#reverse_end$303null;
#reverse:
print$303float$303next_command$303""$303null;
stack$303UNDEFINE$303stack$303s;
print$303""$303null;
pop$303s$303null;get_root_dest$303
print$303SEND_DEST$303pop$303""$303null;[$303str$303
string$303SEND_DEST$303buf;
stack$303res;len$303float$303len$303
s.pop(buf);
#reverse_s:
print$303""$303UNSET_SOURCE$303=$303null;send_command$303
[goto(#reverse_e),("end"==buf),print("")];
res.push(buf);UNSET_DEST$303SET_SOURCE$303RESET_SOURCE$303is_letter$303
s.pop(buf);
print$303""$303null;bool$303
goto$303#reverse_s$303bool$303bool$303null;
#reverse_e:
print$303SEND_DEST$303input$303REROUTE$303""$303null;get_root_source$303
push$303UNDEFINE$303string$303SET_DEST$303res$303null;
UNDEFINE$303REROUTE$303res$303:$303=$303null;
UNDEFINE$303buf$303null;
UNDEFINE$303[$303s$303UNSET_DEST$303len$303NOT$303null;is_digit$303goto$303
goto$303)$303$reverse_return_var$303,$303null;
#reverse_end:
print$303string$303""$303[$303AND$303null;:$303
string$303$get_imports_return_var;
stack$303:$303$get_imports_res;
goto$303#get_imports_end$303null;
#get_imports:
print$303UNSET_DEST$303""$303null;
print$303""$303null;
stack$303res;str$303
int$303($303number;
string$303.$303:$303len$303import_name;True$303goto$303DEL_DEST$303
string$303command;print$303
int$303command_len;
int$303True$303get_root_dest$303str$303SEND_DEST$303import_end;push$303
next_command$303SEND_DEST$303stack$303UNSET_DEST$303command$303null;
#get_imports_s:
print$303""$303null;SET_SOURCE$303<$303pop$303
[goto(#get_imports_e),("end"==command),print("")];
print$303""$303/$303UNSET_DEST$303null;
=$303number$303]$303index$303command$303"#import";
print$303]$303""$303+$303*$303string$303null;
[print(""),(0==number),goto(#get_imports_e)];
=$303command_len$303len$303command$303stack$303null;next_command$303
int$303.$303$find_import_end_res0;
push$303command$303null;
=$303$find_import_end_return_var$303float$303len$303print$303XOR$303"#find_import_end_res0";is_letter$303
goto$303#find_import_end$303null;
#find_import_end_res0:
pop$303$find_import_end_res$303is_letter$303print$303null;
=$303OR$303$find_import_end_res0$303$find_import_end_res;]$303stack$303len$303
=$303import_end$303-$303$find_import_end_res0;float$303
import_name=command[8:import_end];
res.push(import_name);
=$303import_end$303+$303import_end$3031;REROUTE$303,$303bool$303
command=command[import_end:command_len];
print$303index$303""$303str$303null;
goto$303#get_imports_s$303null;
#get_imports_e:
print$303send_command$303""$303SET_SOURCE$303null;,$303float$303XOR$303
RESET_SOURCE;,$303<$303
=$303^$303first_command$303command;
stack$303$reverse_res0;
push$303res$303null;
=$303$reverse_return_var$303goto$303string$303.$303index$303"#reverse_res0";str$303
goto$303#reverse$303null;
#reverse_res0:
pop$303next_command$303$reverse_res$303null;
=$303get_root_source$303)$303$reverse_res0$303$reverse_res;
push$303$reverse_res0$303null;
UNDEFINE$303send_command$303$reverse_res0$303AND$303NOT$303null;
UNDEFINE$303.$303$find_import_end_res0$303)$303null;
UNDEFINE$303==$303UNDEFINE$303import_end$303null;
UNDEFINE$303OR$303command_len$303is_letter$303False$303XOR$303null;SET_DEST$303
UNDEFINE$303)$303command$303null;
UNDEFINE$303]$303import_name$303null;
UNDEFINE$303string$303XOR$303number$303SET_SOURCE$303goto$303null;
UNDEFINE$303get_root_source$303res$303SET_SOURCE$303null;
goto$303$get_imports_return_var$303null;
#get_imports_end:
print$303""$303=$303+$303DEL_DEST$303null;]$303goto$303
string$303$file_union_return_var;bool$303is_letter$303
goto$303#file_union_end$303,$303null;
#file_union:
print$303($303UNDEFINE$303UNSET_SOURCE$303-$303""$303null;SET_DEST$303get_root_source$303
print$303,$303""$303null;
string$303command;SET_SOURCE$303
stack$303^$303AND$303=$303imports;print$303
string$303import;
stack$303$get_imports_res0;>$303
=$303$get_imports_return_var$303"#get_imports_res0";get_root_source$303>$303DEL_DEST$303str$303
goto$303#get_imports$303null;
#get_imports_res0:
pop$303$get_imports_res$303NOT$303get_root_dest$303float$303SET_SOURCE$303null;[$303
=$303$get_imports_res0$303$get_imports_res;
=$303imports$303($303$get_imports_res0;>=$303($303>=$303
imports.pop(import);
#file_union_s:
print$303True$303""$303SEND_DEST$303null;
[goto(#file_union_e),("end"==import),print("")];int$303-$303RESET_SOURCE$303
UNSET_SOURCE;True$303
SET_SOURCE$303import$303float$303len$303,$303null;str$303<=$303input$303next_command$303is_digit$303command$303null;
#import_s:
print$303float$303""$303null;NOT$303goto$303print$303
[goto(#import_e),("end"==command),print("")];
send_command$303command$303null;
next_command$303RESET_SOURCE$303stack$303^$303.$303command$303null;
print$303""$303null;int$303stack$303
goto$303>=$303#import_s$303null;
#import_e:
print$303""$303null;
imports.pop(import);==$303
print$303""$303stack$303send_command$303push$303null;
goto$303#file_union_s$303False$303.$303null;
#file_union_e:
print$303input$303""$303REROUTE$303null;RESET_SOURCE$303UNSET_DEST$303
SET_SOURCE$303UNDEFINE$303root_source$303null;
next_command$303command$303,$303null;
send_command$303first_command$303null;
next_command$303-$303float$303+$303command$303next_command$303null;
#final_s:
print$303+$303SET_DEST$303""$303pop$303null;
[goto(#final_e),("end"==command),print("")];==$303
send_command$303)$303command$303*$303null;
next_command$303send_command$303command$303goto$303null;
print$303int$303push$303""$303null;+$303
goto$303($303#final_s$303next_command$303null;
#final_e:
print$303,$303XOR$303""$303NOT$303null;int$303float$303
print$303""$303null;SET_SOURCE$303
UNDEFINE$303$get_imports_res0$303index$303^$303null;pop$303=$303
UNDEFINE$303($303import$303null;
UNDEFINE$303<$303imports$303AND$303null;print$303
UNDEFINE$303UNSET_DEST$303command$303null;
goto$303$file_union_return_var$303null;
#file_union_end:
print$303print$303float$303string$303""$303print$303null;^$303
string$303$main_return_var;SET_DEST$303
goto$303#main_end$303null;
#main:
print$303get_root_dest$303""$303null;*$303
print$303""$303SEND_DEST$303UNDEFINE$303null;
=$303$init_return_var$303-$303"#init_res0";
goto$303#init$303null;
#init_res0:
print$303is_digit$303""$303SET_DEST$303null;
print$303""$303null;
=$303-$303-$303$file_union_return_var$303index$303"#file_union_res0";
goto$303#file_union$303<$303null;
#file_union_res0:
print$303>$303""$303null;
print$303""$303-$303null;
=$303*$303]$303$finish_return_var$303"#finish_res0";
goto$303#finish$303null;
#finish_res0:
print$303/$303index$303""$303null;<=$303pop$303
print$303""$303null;
goto$303SEND_DEST$303get_root_dest$303get_root_dest$303$main_return_var$303)$303null;
#main_end:
print$303""$303null;=$303bool$303send_command$303$main_return_var$303/$303next_command$303"#main_res0";==$303NOT$303
goto$303REROUTE$303#main$303null;
#main_res0:
print$303""$303string$303($303null;
print$303""$303get_root_dest$303+$303UNSET_SOURCE$303-$303null;