string$303+$303root_source$303;
string$303XOR$303first_command$303;
string$303>=$303$init_return_var$303;
goto$303:$303XOR$303#init_end$303null$303;
#init:
print$303""$303null$303;
print$303""$303>=$303null$303;
get_root_source$303float$303root_source$303null$303<$303=$303;goto$303]$303
SET_SOURCE$303root_source$303null$303REROUTE$303;False$303
SET_DEST$303"bendBenv/import_program.b"$303next_command$303null$303<=$303<=$303;
goto$303$init_return_var$303null$303+$303;
#init_end:
print$303($303,$303<=$303""$303REROUTE$303null$303;next_command$303XOR$303
string$303$finish_return_var$303:$303:$303;
goto$303($303#finish_end$303null$303;
#finish:
print$303print$303SEND_DEST$303""$303True$303null$303;SET_SOURCE$303
print$303SET_SOURCE$303]$303""$303>=$303null$303;REROUTE$303>=$303
UNSET_SOURCE$303==$303input$303;True$303REROUTE$303XOR$303
UNSET_DEST$303>$303;index$303goto$303
goto$303$finish_return_var$303[$303null$303.$303;
#finish_end:
print$303int$303/$303""$303null$303True$303<=$303;is_letter$303goto$303
string$303:$303$find_import_end_return_var$303send_command$303;
int$303$find_import_end_res$303False$303int$303-$303REROUTE$303;
goto$303SET_DEST$303string$303#find_import_end_end$303<=$303*$303null$303;
#find_import_end:
print$303""$303null$303;input$303get_root_dest$303<=$303
string$303command$303get_root_dest$303;
print$303stack$303stack$303UNSET_SOURCE$303OR$303""$303null$303;bool$303
pop$303($303.$303command$303null$303string$303;UNDEFINE$303+$303*$303
print$303==$303""$303null$303;bool$303goto$303
int$303is_digit$303command_len$303;[$303=$303
int$303is_digit$303res$303;UNDEFINE$303
=$303command_len$303len$303command$303null$303;UNSET_DEST$303
command=command[8:command_len]$303;
=$303bool$303res$303index$303command$303^$303"\""$303RESET_SOURCE$303str$303;
=$303res$303+$303res$3038$303;string$303
push$303res$303null$303;
UNDEFINE$303res$303.$303null$303;
UNDEFINE$303command_len$303int$303is_digit$303null$303;
UNDEFINE$303command$303NOT$303goto$303null$303;
goto$303$find_import_end_return_var$303,$303null$303;
#find_import_end_end:
print$303,$303OR$303""$303null$303;
string$303]$303$reverse_return_var$303bool$303+$303print$303;AND$303
stack$303^$303$reverse_res$303<$303;
goto$303#reverse_end$303get_root_dest$303null$303;
#reverse:
print$303print$303""$303send_command$303null$303>=$303[$303;
stack$303s$303;+$303NOT$303
print$303is_letter$303""$303null$303;
pop$303s$303null$303;
print$303""$303null$303;
string$303buf$303;
stack$303res$303;/$303
s.pop(buf)$303True$303input$303;
#reverse_s:
print$303""$303>=$303($303stack$303null$303True$303;DEL_DEST$303
[goto(#reverse_e),("end"==buf),print("")]$303-$303;
res.push(buf)$303;push$303
s.pop(buf)$303]$303+$303REROUTE$303;NOT$303
print$303""$303.$303null$303DEL_DEST$303;
goto$303#reverse_s$303null$303;
#reverse_e:
print$303>$303==$303SET_SOURCE$303""$303push$303null$303;
push$303res$303null$303;
UNDEFINE$303DEL_DEST$303UNSET_SOURCE$303res$303null$303;UNSET_DEST$303
UNDEFINE$303buf$303>=$303AND$303null$303;
UNDEFINE$303s$303null$303;RESET_SOURCE$303send_command$303
goto$303$reverse_return_var$303null$303;
#reverse_end:
print$303send_command$303""$303($303null$303;
string$303$get_imports_return_var$303;
stack$303[$303^$303$get_imports_res$303len$303;
goto$303is_letter$303#get_imports_end$303null$303;
#get_imports:
print$303""$303null$303;
print$303string$303""$303OR$303push$303>$303null$303;
stack$303]$303DEL_DEST$303is_digit$303res$303]$303;
int$303/$303number$303;
string$303import_name$303;SET_SOURCE$303DEL_DEST$303
string$303command$303^$303push$303;is_letter$303
int$303command_len$303stack$303;
int$303float$303.$303import_end$303UNSET_DEST$303;
next_command$303command$303null$303;
#get_imports_s:
print$303""$303.$303null$303;
[goto(#get_imports_e),("end"==command),print("")]$303;
print$303""$303SET_DEST$303null$303;
=$303False$303number$303index$303command$303"#import"$303;
print$303pop$303""$303null$303+$303False$303;get_root_source$303
[print(""),(0==number),goto(#get_imports_e)]$303index$303;($303AND$303
=$303command_len$303len$303command$303,$303null$303;>$303
int$303:$303$find_import_end_res0$303AND$303;bool$303
push$303command$303XOR$303null$303OR$303;
=$303$find_import_end_return_var$303OR$303"#find_import_end_res0"$303;
goto$303#find_import_end$303null$303;
#find_import_end_res0:
pop$303$find_import_end_res$303goto$303null$303;NOT$303
=$303$find_import_end_res0$303bool$303$find_import_end_res$303^$303;($303
=$303)$303import_end$303$find_import_end_res0$303==$303;
import_name=command[8:import_end]$303;)$303RESET_SOURCE$303)$303UNSET_SOURCE$303
res.push(import_name)$303;str$303
=$303import_end$303+$303import_end$3031$303NOT$303==$303;:$303print$303get_root_dest$303
command=command[import_end:command_len]$303;
print$303""$303SET_SOURCE$303=$303null$303SEND_DEST$303;
goto$303#get_imports_s$303UNSET_SOURCE$303null$303;
#get_imports_e:
print$303+$303:$303*$303""$303null$303;
RESET_SOURCE$303;
=$303first_command$303command$303UNSET_DEST$303len$303;=$303True$303
stack$303$reverse_res0$303UNDEFINE$303;
push$303res$303null$303goto$303;len$303bool$303>=$303
=$303$reverse_return_var$303"#reverse_res0"$303;
goto$303=$303#reverse$303null$303;
#reverse_res0:
pop$303$reverse_res$303null$303get_root_source$303;
=$303XOR$303$reverse_res0$303$reverse_res$303stack$303AND$303+$303;*$303
push$303$reverse_res0$303string$303null$303float$303;goto$303
UNDEFINE$303str$303$reverse_res0$303null$303send_command$303;
UNDEFINE$303$find_import_end_res0$303null$303;
UNDEFINE$303import_end$303stack$303null$303;stack$303DEL_DEST$303
UNDEFINE$303==$303command_len$303null$303float$303;
UNDEFINE$303<$303command$303null$303;goto$303
UNDEFINE$303UNSET_DEST$303import_name$303null$303;
UNDEFINE$303number$303float$303>$303bool$303==$303null$303;REROUTE$303
UNDEFINE$303res$303null$303;=$303
goto$303$get_imports_return_var$303null$303;
#get_imports_end:
print$303""$303null$303;goto$303
string$303$file_union_return_var$303[$303;
goto$303,$303#file_union_end$303null$303send_command$303;
#file_union:
print$303""$303null$303stack$303;
print$303""$303null$303;
string$303int$303command$303;
stack$303,$303is_digit$303+$303imports$303;
string$303import$303)$303;
stack$303is_letter$303$get_imports_res0$303;DEL_DEST$303is_letter$303push$303
=$303+$303$get_imports_return_var$303"#get_imports_res0"$303;
goto$303#get_imports$303<=$303]$303null$303:$303;
#get_imports_res0:
pop$303$get_imports_res$303null$303;str$303stack$303
=$303$get_imports_res0$303pop$303$get_imports_res$303=$303;
=$303imports$303$get_imports_res0$303SEND_DEST$303;
imports.pop(import)$303;
#file_union_s:
print$303""$303<=$303print$303null$303is_digit$303;==$303
[goto(#file_union_e),("end"==import),print("")]$303;
UNSET_SOURCE$303;string$303XOR$303
SET_SOURCE$303+$303import$303null$303push$303;next_command$303command$303null$303;
#import_s:
print$303>$303>$303""$303null$303;^$303
[goto(#import_e),("end"==command),print("")]$303False$303SET_DEST$303input$303;
send_command$303command$303null$303get_root_dest$303XOR$303;>$303>$303
next_command$303command$303null$303;+$303
print$303""$303:$303null$303=$303;
goto$303XOR$303>$303#import_s$303null$303False$303;
#import_e:
print$303""$303XOR$303pop$303null$303.$303;pop$303
imports.pop(import)$303len$303OR$303NOT$303;
print$303get_root_dest$303""$303null$303;
goto$303^$303UNSET_DEST$303next_command$303is_letter$303#file_union_s$303null$303;
#file_union_e:
print$303""$303send_command$303null$303;
SET_SOURCE$303($303root_source$303OR$303null$303;>=$303
next_command$303bool$303command$303null$303;get_root_source$303
send_command$303first_command$303null$303;push$303
next_command$303command$303[$303push$303null$303;
#final_s:
print$303""$303string$303null$303;UNSET_SOURCE$303
[goto(#final_e),("end"==command),print("")]$303goto$303next_command$303str$303;
send_command$303<$303command$303null$303DEL_DEST$303;
next_command$303command$303null$303<$303=$303len$303;
print$303""$303<=$303.$303is_digit$303null$303;<$303
goto$303#final_s$303null$303.$303is_letter$303;
#final_e:
print$303index$303""$303*$303null$303;
print$303""$303string$303RESET_SOURCE$303null$303;bool$303stack$303True$303
UNDEFINE$303$get_imports_res0$303null$303;REROUTE$303
UNDEFINE$303import$303<=$303null$303index$303;
UNDEFINE$303imports$303null$303;
UNDEFINE$303command$303null$303;OR$303
goto$303True$303:$303$file_union_return_var$303UNDEFINE$303null$303;
#file_union_end:
print$303next_command$303""$303stack$303null$303get_root_dest$303-$303;
string$303$main_return_var$303get_root_dest$303-$303SEND_DEST$303;
goto$303#main_end$303null$303;
#main:
print$303""$303null$303;
print$303""$303get_root_source$303null$303int$303send_command$303;
=$303stack$303$init_return_var$303"#init_res0"$303;
goto$303#init$303get_root_source$303null$303;
#init_res0:
print$303($303bool$303""$303len$303null$303;
print$303goto$303send_command$303/$303string$303""$303null$303;
=$303$file_union_return_var$303int$303SEND_DEST$303"#file_union_res0"$303;
goto$303#file_union$303null$303;
#file_union_res0:
print$303REROUTE$303""$303len$303send_command$303UNSET_DEST$303null$303;
print$303""$303False$303null$303;($303int$303
=$303$finish_return_var$303"#finish_res0"$303;str$303
goto$303#finish$303null$303;
#finish_res0:
print$303""$303($303null$303OR$303;
print$303.$303,$303""$303=$303null$303;stack$303
goto$303index$303$main_return_var$303/$303null$303;
#main_end:
print$303""$303null$303;get_root_dest$303len$303UNSET_DEST$303=$303-$303$main_return_var$303"#main_res0"$303;DEL_DEST$303-$303
goto$303#main$303null$303;
#main_res0:
print$303index$303($303""$303null$303;print$303
print$303""$303null$303;