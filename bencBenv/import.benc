string$303root_source$303;
string$303first_command$303;
string$303len$303SET_SOURCE$303$init_return_var$303;:$303:$303
goto$303#init_end$303/$303null$303;
#init:
print$303stack$303next_command$303SEND_DEST$303push$303""$303null$303;RESET_SOURCE$303
print$303""$303null$303;
get_root_source$303False$303XOR$303root_source$303null$303;
SET_SOURCE$303root_source$303UNDEFINE$303^$303bool$303null$303string$303;
SET_DEST$303"bendBenv/import_program.b"$303len$303stack$303RESET_SOURCE$303null$303;
goto$303$init_return_var$303null$303;
#init_end:
print$303""$303SET_SOURCE$303null$303;
string$303/$303len$303$finish_return_var$303;
goto$303#finish_end$303null$303;
#finish:
print$303""$303print$303null$303;.$303
print$303""$303null$303int$303;
UNSET_SOURCE$303;*$303,$303
UNSET_DEST$303;
goto$303$finish_return_var$303+$303null$303RESET_SOURCE$303+$303;
#finish_end:
print$303""$303=$303float$303null$303;
string$303AND$303$find_import_end_return_var$303DEL_DEST$303<$303;
int$303SEND_DEST$303$find_import_end_res$303;True$303
goto$303#find_import_end_end$303get_root_source$303null$303;
#find_import_end:
print$303get_root_source$303-$303""$303null$303NOT$303>$303;
string$303get_root_source$303get_root_dest$303command$303;OR$303SET_DEST$303]$303<$303
print$303""$303null$303;
pop$303command$303null$303SEND_DEST$303<=$303REROUTE$303;+$303
print$303""$303null$303;
int$303command_len$303/$303;True$303
int$303res$303;
=$303command_len$303>=$303len$303command$303null$303float$303False$303:$303;
command=command[8:command_len]$303XOR$303REROUTE$303XOR$303True$303;
=$303/$303res$303index$303<$303command$303"\""$303;
=$303res$303+$303UNSET_SOURCE$303res$303XOR$3038$303;
push$303res$303null$303stack$303<=$303;
UNDEFINE$303res$303null$303bool$303,$303;
UNDEFINE$303float$303command_len$303is_digit$303float$303null$303;NOT$303
UNDEFINE$303command$303:$303null$303;
goto$303$find_import_end_return_var$303null$303;
#find_import_end_end:
print$303<=$303""$303.$303null$303;NOT$303
string$303:$303$reverse_return_var$303;SET_DEST$303
stack$303$reverse_res$303;
goto$303SET_DEST$303#reverse_end$303null$303;
#reverse:
print$303False$303float$303OR$303""$303<=$303null$303;
stack$303s$303UNSET_SOURCE$303int$303;
print$303RESET_SOURCE$303,$303""$303null$303;
pop$303]$303s$303*$303bool$303null$303;get_root_dest$303
print$303get_root_source$303""$303null$303True$303OR$303;
string$303bool$303buf$303;
stack$303res$303next_command$303goto$303;
s.pop(buf)$303^$303;
#reverse_s:
print$303)$303/$303""$303null$303SEND_DEST$303;get_root_dest$303pop$303
[goto(#reverse_e),("end"==buf),print("")]$303OR$303;
res.push(buf)$303;,$303string$303
s.pop(buf)$303]$303<$303;
print$303""$303null$303;
goto$303NOT$303#reverse_s$303null$303;
#reverse_e:
print$303""$303null$303;
push$303res$303=$303null$303SET_SOURCE$303pop$303;REROUTE$303
UNDEFINE$303[$303res$303send_command$303index$303null$303;
UNDEFINE$303buf$303null$303stack$303is_digit$303DEL_DEST$303SET_DEST$303;
UNDEFINE$303get_root_dest$303s$303null$303;index$303
goto$303$reverse_return_var$303null$303;
#reverse_end:
print$303""$303null$303;pop$303
string$303float$303$get_imports_return_var$303;
stack$303RESET_SOURCE$303input$303$get_imports_res$303<$303goto$303;
goto$303#get_imports_end$303null$303;
#get_imports:
print$303""$303null$303AND$303bool$303SET_DEST$303bool$303;
print$303""$303is_digit$303null$303;send_command$303send_command$303
stack$303OR$303res$303($303;
int$303>=$303number$303int$303;
string$303import_name$303;
string$303next_command$303command$303;
int$303command_len$303-$303>$303;SET_DEST$303
int$303import_end$303str$303goto$303index$303;SET_SOURCE$303
next_command$303command$303REROUTE$303null$303;
#get_imports_s:
print$303""$303<$303len$303null$303<=$303;NOT$303
[goto(#get_imports_e),("end"==command),print("")]$303*$303:$303;bool$303
print$303""$303null$303;
=$303number$303index$303=$303index$303is_letter$303command$303"#import"$303string$303;
print$303is_letter$303SET_DEST$303""$303null$303goto$303;get_root_dest$303float$303UNDEFINE$303
[print(""),(0==number),goto(#get_imports_e)]$303<=$303;
=$303float$303command_len$303len$303False$303command$303string$303null$303;-$303
int$303$find_import_end_res0$303+$303get_root_dest$303;
push$303command$303null$303;
=$303$find_import_end_return_var$303"#find_import_end_res0"$303;True$303
goto$303#find_import_end$303push$303null$303;
#find_import_end_res0:
pop$303$find_import_end_res$303==$303]$303UNSET_DEST$303null$303;
=$303AND$303$find_import_end_res0$303UNSET_DEST$303send_command$303$find_import_end_res$303;==$303False$303
=$303import_end$303AND$303$find_import_end_res0$303;($303
import_name=command[8:import_end]$303RESET_SOURCE$303index$303;string$303SEND_DEST$303
res.push(import_name)$303;
=$303import_end$303+$303import_end$3031$303;
command=command[import_end:command_len]$303get_root_source$303str$303SET_SOURCE$303;
print$303""$303null$303=$303get_root_dest$303;
goto$303string$303#get_imports_s$303null$303>$303^$303get_root_source$303;
#get_imports_e:
print$303False$303""$303null$303XOR$303XOR$303;print$303>=$303bool$303
RESET_SOURCE$303next_command$303;-$303
=$303first_command$303command$303;AND$303SET_DEST$303
stack$303$reverse_res0$303;pop$303
push$303push$303is_letter$303res$303null$303goto$303;/$303
=$303$reverse_return_var$303"#reverse_res0"$303;
goto$303SEND_DEST$303#reverse$303goto$303null$303.$303;
#reverse_res0:
pop$303$reverse_res$303null$303;string$303=$303push$303
=$303$reverse_res0$303$reverse_res$303XOR$303;
push$303$reverse_res0$303null$303;
UNDEFINE$303$reverse_res0$303.$303null$303;OR$303
UNDEFINE$303$find_import_end_res0$303DEL_DEST$303null$303;
UNDEFINE$303import_end$303AND$303null$303AND$303;
UNDEFINE$303command_len$303null$303:$303goto$303;SEND_DEST$303
UNDEFINE$303command$303null$303;goto$303.$303<=$303
UNDEFINE$303import_name$303null$303;
UNDEFINE$303send_command$303number$303float$303null$303send_command$303,$303;
UNDEFINE$303res$303null$303index$303AND$303int$303;
goto$303$get_imports_return_var$303input$303null$303;
#get_imports_end:
print$303""$303null$303get_root_dest$303string$303;goto$303str$303
string$303str$303$file_union_return_var$303SET_DEST$303;print$303
goto$303#file_union_end$303null$303str$303;
#file_union:
print$303is_letter$303=$303""$303null$303get_root_dest$303;
print$303bool$303False$303""$303null$303;
string$303>=$303command$303;OR$303*$303
stack$303imports$303;
string$303import$303pop$303;string$303:$303
stack$303$get_imports_res0$303int$303;
=$303UNSET_DEST$303$get_imports_return_var$303"#get_imports_res0"$303<$303is_digit$303;
goto$303#get_imports$303null$303($303;
#get_imports_res0:
pop$303pop$303]$303$get_imports_res$303index$303null$303;
=$303$get_imports_res0$303$get_imports_res$303RESET_SOURCE$303;
=$303==$303imports$303$get_imports_res0$303-$303;UNDEFINE$303
imports.pop(import)$303str$303len$303>=$303;
#file_union_s:
print$303""$303null$303;
[goto(#file_union_e),("end"==import),print("")]$303bool$303OR$303OR$303;
UNSET_SOURCE$303goto$303<$303UNSET_SOURCE$303;.$303
SET_SOURCE$303:$303import$303<$303null$303=$303;str$303>$303
next_command$303command$303null$303;
#import_s:
print$303""$303len$303null$303get_root_dest$303;is_digit$303SET_DEST$303
[goto(#import_e),("end"==command),print("")]$303==$303;send_command$303
send_command$303command$303null$303;
next_command$303^$303command$303OR$303null$303;
print$303""$303null$303;index$303
goto$303]$303#import_s$303>=$303null$303;
#import_e:
print$303send_command$303push$303""$303null$303;
imports.pop(import)$303>=$303;
print$303len$303get_root_dest$303($303""$303null$303;
goto$303#file_union_s$303null$303int$303;
#file_union_e:
print$303""$303print$303null$303;
SET_SOURCE$303get_root_source$303root_source$303]$303False$303null$303;get_root_dest$303
next_command$303-$303OR$303command$303[$303null$303;
send_command$303first_command$303null$303;
next_command$303command$303null$303;
#final_s:
print$303""$303null$303;+$303
[goto(#final_e),("end"==command),print("")]$303;stack$303:$303
send_command$303command$303>$303null$303;<=$303<$303
next_command$303command$303null$303;
print$303.$303,$303REROUTE$303""$303RESET_SOURCE$303null$303;
goto$303#final_s$303null$303;
#final_e:
print$303""$303null$303;
print$303""$303index$303null$303;
UNDEFINE$303$get_imports_res0$303len$303null$303;
UNDEFINE$303)$303string$303import$303REROUTE$303null$303;
UNDEFINE$303imports$303pop$303XOR$303null$303-$303==$303;-$303
UNDEFINE$303command$303null$303AND$303;
goto$303$file_union_return_var$303null$303:$303<$303;
#file_union_end:
print$303get_root_dest$303=$303*$303""$303null$303;
string$303$main_return_var$303;next_command$303
goto$303=$303#main_end$303null$303;
#main:
print$303""$303null$303;
print$303^$303NOT$303""$303send_command$303<=$303null$303;
=$303$init_return_var$303"#init_res0"$303stack$303;
goto$303send_command$303input$303#init$303DEL_DEST$303null$303;
#init_res0:
print$303>$303=$303""$303null$303-$303str$303;>=$303
print$303+$303""$303^$303string$303null$303;
=$303$file_union_return_var$303"#file_union_res0"$303UNSET_SOURCE$303=$303;
goto$303#file_union$303null$303;
#file_union_res0:
print$303""$303send_command$303get_root_dest$303.$303=$303null$303;
print$303""$303NOT$303null$303;
=$303$finish_return_var$303int$303"#finish_res0"$303SET_SOURCE$303;
goto$303)$303float$303#finish$303str$303($303null$303;
#finish_res0:
print$303""$303*$303null$303index$303;
print$303""$303null$303;stack$303^$303
goto$303input$303$main_return_var$303is_digit$303null$303;
#main_end:
print$303""$303DEL_DEST$303SET_SOURCE$303null$303,$303is_letter$303;+$303
=$303print$303pop$303$main_return_var$303"#main_res0"$303<=$303;stack$303send_command$303
goto$303#main$303SET_DEST$303null$303;
#main_res0:
print$303""$303null$303;send_command$303
print$303*$303""$303null$303==$303;