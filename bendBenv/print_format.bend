string$303$println_return_var;
goto$303#println_end$303null;
#println:
print$303""$303null;
string$303s;
print$303""$303null;
pop$303s$303null;
print$303""$303null;
print$303s$303null;
print$303"
"$303null;
UNDEFINE$303s$303null;
goto$303$println_return_var$303null;
#println_end:
print$303""$303null;
string$303$reverse_return_var;
stack$303$reverse_res;
goto$303#reverse_end$303null;
#reverse:
print$303""$303null;
stack$303s;
print$303""$303null;
pop$303s$303null;
print$303""$303null;
string$303buf;
stack$303res;
s.pop(buf);
#_reverse_s:
print$303""$303null;
[goto(#_reverse_e),("end"==buf),print("")];
res.push(buf);
s.pop(buf);
print$303""$303null;
goto$303#_reverse_s$303null;
#_reverse_e:
print$303""$303null;
push$303res$303null;
UNDEFINE$303res$303null;
UNDEFINE$303buf$303null;
UNDEFINE$303s$303null;
goto$303$reverse_return_var$303null;
#reverse_end:
print$303""$303null;
string$303$indexes_return_var;
stack$303$indexes_res;
goto$303#indexes_end$303null;
#indexes:
print$303""$303null;
string$303sub_s;
string$303s;
print$303""$303null;
pop$303sub_s$303null;
pop$303s$303null;
print$303""$303null;
stack$303res;
int$303i;
int$303pointer;
int$303s_len;
int$303s_len_old;
int$303sub_len;
=$303s_len$303len$303s$303null;
=$303sub_len$303len$303sub_s$303null;
=$303s_len_old$303s_len;
=$303i$303index$303s$303sub_s;
=$303pointer$303i;
#_indexes_s:
print$303""$303null;
[goto(#_indexes_e),(-1==i),print("")];
=$303i$303+$303i$303-$303s_len_old$303s_len;
res.push(i);
=$303pointer$303+$303pointer$303sub_len;
s=s[pointer:s_len];
=$303s_len$303len$303s$303null;
=$303i$303index$303s$303sub_s;
=$303pointer$303i;
print$303""$303null;
goto$303#_indexes_s$303null;
#_indexes_e:
print$303""$303null;
stack$303$reverse_res0;
push$303res$303null;
=$303$reverse_return_var$303"#reverse_res0";
goto$303#reverse$303null;
#reverse_res0:
pop$303$reverse_res$303null;
=$303$reverse_res0$303$reverse_res;
=$303res$303$reverse_res0;
push$303res$303null;
UNDEFINE$303$reverse_res0$303null;
UNDEFINE$303sub_len$303null;
UNDEFINE$303s_len_old$303null;
UNDEFINE$303s_len$303null;
UNDEFINE$303pointer$303null;
UNDEFINE$303i$303null;
UNDEFINE$303res$303null;
UNDEFINE$303sub_s$303null;
UNDEFINE$303s$303null;
goto$303$indexes_return_var$303null;
#indexes_end:
print$303""$303null;
string$303$ops_return_var;
stack$303$ops_res;
goto$303#ops_end$303null;
#ops:
print$303""$303null;
string$303op;
string$303command;
print$303""$303null;
pop$303op$303null;
pop$303command$303null;
print$303""$303null;
stack$303quotes;
stack$303these_quotes;
stack$303op_nums;
string$303buf;
stack$303res;
int$303num1;
int$303num2;
int$303op_num;
bool$303was_quote;
bool$303to_add;
=$303was_quote$303False;
=$303to_add$303True;
stack$303$indexes_res0;
push$303command$303null;
push$303op$303null;
=$303$indexes_return_var$303"#indexes_res0";
goto$303#indexes$303null;
#indexes_res0:
pop$303$indexes_res$303null;
=$303$indexes_res0$303$indexes_res;
=$303op_nums$303$indexes_res0;
op_nums.pop(buf);
#_op_nums_s:
print$303""$303null;
[goto(#_op_nums_e),("end"==buf),print("")];
=$303op_num$303int$303buf$303null;
=$303quotes$303reg_find$303"\"(\\.|[^\"])*\""$303command;
#_quotes_s:
print$303""$303null;
quotes.pop(these_quotes);
these_quotes.pop(buf);
print$303""$303null;
[goto(#_quotes_e),("end"==buf),print("")];
#_these_quotes_s:
print$303""$303null;
[goto(#_these_quotes_e),("end"==buf),print("")];
=$303num1$303int$303buf$303null;
these_quotes.pop(buf);
=$303num2$303int$303buf$303null;
these_quotes.pop(buf);
=$303was_quote$303True;
print$303""$303null;
goto$303#_these_quotes_s$303null;
#_these_quotes_e:
print$303""$303null;
[print(""),((op_num>num1)AND(op_num<num2)),goto(#_is_op_end)];
=$303to_add$303False;
print$303""$303null;
goto$303#_push_op_end$303null;
#_is_op_end:
print$303""$303null;
goto$303#_quotes_s$303null;
#_quotes_e:
print$303""$303null;
[goto(#_push_op_end),((was_quote)AND(NOT(to_add))),print("")];
res.push(op_num);
=$303was_quote$303False;
=$303to_add$303True;
#_push_op_end:
print$303""$303null;
print$303""$303null;
op_nums.pop(buf);
=$303was_quote$303False;
=$303to_add$303True;
print$303""$303null;
goto$303#_op_nums_s$303null;
#_op_nums_e:
print$303""$303null;
stack$303$reverse_res1;
push$303res$303null;
=$303$reverse_return_var$303"#reverse_res1";
goto$303#reverse$303null;
#reverse_res1:
pop$303$reverse_res$303null;
=$303$reverse_res1$303$reverse_res;
=$303res$303$reverse_res1;
push$303res$303null;
UNDEFINE$303$reverse_res1$303null;
UNDEFINE$303$indexes_res0$303null;
UNDEFINE$303to_add$303null;
UNDEFINE$303was_quote$303null;
UNDEFINE$303op_num$303null;
UNDEFINE$303num2$303null;
UNDEFINE$303num1$303null;
UNDEFINE$303res$303null;
UNDEFINE$303buf$303null;
UNDEFINE$303op_nums$303null;
UNDEFINE$303these_quotes$303null;
UNDEFINE$303quotes$303null;
UNDEFINE$303op$303null;
UNDEFINE$303command$303null;
goto$303$ops_return_var$303null;
#ops_end:
print$303""$303null;
string$303$in_stack_return_var;
bool$303$in_stack_res;
goto$303#in_stack_end$303null;
#in_stack:
print$303""$303null;
string$303el;
stack$303s;
print$303""$303null;
pop$303el$303null;
pop$303s$303null;
print$303""$303null;
string$303buf;
bool$303res;
=$303res$303False;
s.pop(buf);
#_in_stack_s:
print$303""$303null;
[goto(#_in_stack_e),("end"==buf),print("")];
print$303""$303null;
[print(""),(el==buf),goto(#_no)];
=$303res$303True;
print$303""$303null;
goto$303#_in_stack_e$303null;
#_no:
print$303""$303null;
s.pop(buf);
print$303""$303null;
goto$303#_in_stack_s$303null;
#_in_stack_e:
print$303""$303null;
push$303res$303null;
UNDEFINE$303res$303null;
UNDEFINE$303buf$303null;
UNDEFINE$303el$303null;
UNDEFINE$303s$303null;
goto$303$in_stack_return_var$303null;
#in_stack_end:
print$303""$303null;
string$303$func_end_return_var;
int$303$func_end_res;
goto$303#func_end_end$303null;
#func_end:
print$303""$303null;
int$303func_begin;
string$303command;
print$303""$303null;
pop$303func_begin$303null;
pop$303command$303null;
print$303""$303null;
stack$303obraces;
stack$303cbraces;
string$303obrace;
string$303cbrace;
string$303symbol;
int$303o_sum;
int$303c_sum;
int$303pos;
string$303spos;
int$303command_len;
=$303command_len$303len$303command$303null;
=$303obrace$303"(";
=$303cbrace$303")";
=$303o_sum$3031;
=$303c_sum$3030;
=$303pos$303+$303func_begin$3031;
stack$303$ops_res0;
push$303command$303null;
push$303obrace$303null;
=$303$ops_return_var$303"#ops_res0";
goto$303#ops$303null;
#ops_res0:
pop$303$ops_res$303null;
=$303$ops_res0$303$ops_res;
=$303obraces$303$ops_res0;
stack$303$ops_res1;
push$303command$303null;
push$303cbrace$303null;
=$303$ops_return_var$303"#ops_res1";
goto$303#ops$303null;
#ops_res1:
pop$303$ops_res$303null;
=$303$ops_res1$303$ops_res;
=$303cbraces$303$ops_res1;
#_braces_s:
print$303""$303null;
[print(""),(pos<command_len),goto(#_braces_e)];
=$303spos$303str$303pos$303null;
print$303""$303null;
bool$303$in_stack_res0;
push$303obraces$303null;
push$303spos$303null;
=$303$in_stack_return_var$303"#in_stack_res0";
goto$303#in_stack$303null;
#in_stack_res0:
pop$303$in_stack_res$303null;
=$303$in_stack_res0$303$in_stack_res;
[print(""),$in_stack_res0,goto(#_o_plus_end)];
=$303o_sum$303+$303o_sum$3031;
#_o_plus_end:
print$303""$303null;
bool$303$in_stack_res1;
push$303cbraces$303null;
push$303spos$303null;
=$303$in_stack_return_var$303"#in_stack_res1";
goto$303#in_stack$303null;
#in_stack_res1:
pop$303$in_stack_res$303null;
=$303$in_stack_res1$303$in_stack_res;
[print(""),$in_stack_res1,goto(#_c_plus_end)];
=$303c_sum$303+$303c_sum$3031;
#_c_plus_end:
print$303""$303null;
[goto(#_braces_e),(o_sum==c_sum),print("")];
=$303pos$303+$303pos$3031;
print$303""$303null;
goto$303#_braces_s$303null;
#_braces_e:
print$303""$303null;
push$303pos$303null;
UNDEFINE$303$in_stack_res1$303null;
UNDEFINE$303$in_stack_res0$303null;
UNDEFINE$303$ops_res1$303null;
UNDEFINE$303$ops_res0$303null;
UNDEFINE$303command_len$303null;
UNDEFINE$303spos$303null;
UNDEFINE$303pos$303null;
UNDEFINE$303c_sum$303null;
UNDEFINE$303o_sum$303null;
UNDEFINE$303symbol$303null;
UNDEFINE$303cbrace$303null;
UNDEFINE$303obrace$303null;
UNDEFINE$303cbraces$303null;
UNDEFINE$303obraces$303null;
UNDEFINE$303func_begin$303null;
UNDEFINE$303command$303null;
goto$303$func_end_return_var$303null;
#func_end_end:
print$303""$303null;
string$303root_dest;
string$303$init_return_var;
goto$303#init_end$303null;
#init:
print$303""$303null;
print$303""$303null;
SET_SOURCE$303"benv/func_program.b"$303null;
get_root_dest$303root_dest$303null;
SET_DEST$303"benv/program.basm"$303null;
goto$303$init_return_var$303null;
#init_end:
print$303""$303null;
string$303$finish_return_var;
goto$303#finish_end$303null;
#finish:
print$303""$303null;
print$303""$303null;
UNSET_SOURCE;
UNSET_DEST;
DEL_DEST$303"benv/func_program.b"$303null;
SEND_DEST$303root_dest$303null;
goto$303$finish_return_var$303null;
#finish_end:
print$303""$303null;
string$303$replace_print_return_var;
goto$303#replace_print_end$303null;
#replace_print:
print$303""$303null;
string$303command;
print$303""$303null;
pop$303command$303null;
print$303""$303null;
stack$303s;
string$303buf;
string$303buf2;
int$303nbuf;
int$303arg_begin;
int$303arg_end;
int$303num;
string$303snum;
int$303command_len;
int$303i;
string$303op;
string$303first_symbol;
first_symbol=command[0];
print$303""$303null;
[print(""),("["==first_symbol),goto(#send_this_end)];
#send_this:
print$303""$303null;
send_command$303command$303null;
print$303""$303null;
goto$303#un_loop_e$303null;
#send_this_end:
print$303""$303null;
=$303op$303"print(";
=$303i$3030;
=$303command_len$303len$303command$303null;
=$303num$3030;
=$303snum$303str$303num$303null;
stack$303$ops_res2;
push$303command$303null;
push$303op$303null;
=$303$ops_return_var$303"#ops_res2";
goto$303#ops$303null;
#ops_res2:
pop$303$ops_res$303null;
=$303$ops_res2$303$ops_res;
=$303s$303$ops_res2;
s.pop(buf);
#replace_s:
print$303""$303null;
[goto(#replace_e),("end"==buf),print("")];
=$303nbuf$303int$303buf$303null;
=$303nbuf$303+$303nbuf$3035;
=$303buf$303str$303nbuf$303null;
=$303arg_begin$303+$303nbuf$3031;
int$303$func_end_res0;
push$303command$303null;
push$303nbuf$303null;
=$303$func_end_return_var$303"#func_end_res0";
goto$303#func_end$303null;
#func_end_res0:
pop$303$func_end_res$303null;
=$303$func_end_res0$303$func_end_res;
=$303arg_end$303$func_end_res0;
buf2=command[arg_begin:arg_end];
print$303""$303null;
[goto(#send_this),("\"\""==buf2),print("")];
=$303buf$303str$303nbuf$303null;
=$303buf$303+$303"string $print_arg"$303snum;
send_command$303buf$303null;
buf=command[arg_begin:arg_end];
=$303buf$303+$303+$303+$303"$print_arg"$303snum$303"="$303buf;
send_command$303buf$303null;
buf=command[arg_end:command_len];
command=command[0:arg_begin];
=$303command$303+$303+$303command$303"$print_arg"$303snum;
=$303command$303+$303command$303buf;
=$303command_len$303len$303command$303null;
stack$303$ops_res3;
push$303command$303null;
push$303op$303null;
=$303$ops_return_var$303"#ops_res3";
goto$303#ops$303null;
#ops_res3:
pop$303$ops_res$303null;
=$303$ops_res3$303$ops_res;
=$303s$303$ops_res3;
=$303num$303+$303num$3031;
=$303snum$303str$303num$303null;
#loop:
print$303""$303null;
[print(""),(i<num),goto(#loop_e)];
s.pop(buf);
=$303i$303+$303i$3031;
print$303""$303null;
goto$303#loop$303null;
#loop_e:
print$303""$303null;
=$303i$3030;
s.pop(buf);
print$303""$303null;
goto$303#replace_s$303null;
#replace_e:
print$303""$303null;
send_command$303command$303null;
=$303i$3030;
#un_loop:
print$303""$303null;
[print(""),(i<num),goto(#un_loop_e)];
=$303snum$303str$303i$303null;
=$303buf$303+$303+$303"UNDEFINE($print_arg"$303snum$303")";
send_command$303buf$303null;
=$303i$303+$303i$3031;
print$303""$303null;
goto$303#un_loop$303null;
#un_loop_e:
print$303""$303null;
print$303""$303null;
UNDEFINE$303$ops_res3$303null;
UNDEFINE$303$func_end_res0$303null;
UNDEFINE$303$ops_res2$303null;
UNDEFINE$303first_symbol$303null;
UNDEFINE$303op$303null;
UNDEFINE$303i$303null;
UNDEFINE$303command_len$303null;
UNDEFINE$303snum$303null;
UNDEFINE$303num$303null;
UNDEFINE$303arg_end$303null;
UNDEFINE$303arg_begin$303null;
UNDEFINE$303nbuf$303null;
UNDEFINE$303buf2$303null;
UNDEFINE$303buf$303null;
UNDEFINE$303s$303null;
UNDEFINE$303command$303null;
goto$303$replace_print_return_var$303null;
#replace_print_end:
print$303""$303null;
string$303$main_return_var;
goto$303#main_end$303null;
#main:
print$303""$303null;
print$303""$303null;
string$303command;
=$303$init_return_var$303"#init_res0";
goto$303#init$303null;
#init_res0:
print$303""$303null;
print$303""$303null;
next_command$303command$303null;
#main_s:
print$303""$303null;
[goto(#main_e),("end"==command),print("")];
push$303command$303null;
=$303$replace_print_return_var$303"#replace_print_res0";
goto$303#replace_print$303null;
#replace_print_res0:
print$303""$303null;
print$303""$303null;
next_command$303command$303null;
print$303""$303null;
goto$303#main_s$303null;
#main_e:
print$303""$303null;
=$303$finish_return_var$303"#finish_res0";
goto$303#finish$303null;
#finish_res0:
print$303""$303null;
print$303""$303null;
UNDEFINE$303command$303null;
goto$303$main_return_var$303null;
#main_end:
print$303""$303null;
=$303$main_return_var$303"#main_res0";
goto$303#main$303null;
#main_res0:
print$303""$303null;
print$303""$303null;
